{
  "swagger": "2.0",
  "info": {
    "version": "v1",
    "title": "Paycor.Time.Web"
  },
  "host": "devsbqtrweb01.dev.paycor.com:80",
  "basePath": "/Time",
  "schemes": [ "http" ],
  "paths": {
    "/api/LookupCache/Department": {
      "get": {
        "tags": [ "Cache" ],
        "summary": "Publishes X client departments to the cloud. \r\n Requires Internal Paycor User.",
        "description": "Requires Internal Paycor User.",
        "operationId": "Cache_Department",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "clientId",
            "in": "query",
            "description": "Client data that should be published",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "take",
            "in": "query",
            "description": "The number of items to grab to publish",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "skip",
            "in": "query",
            "description": "The number of items to skip",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "204": {
            "description": "No content on success",
            "schema": { "$ref": "#/definitions/Object" }
          },
          "400": { "description": "Bad request" },
          "500": { "description": "Internal Server Error" }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/LookupCache/PunchStatusType": {
      "post": {
        "tags": [ "Cache" ],
        "summary": "Publishes the PunchStatus lookup data to the cloud. This is not client specific.",
        "description": "Requires Internal Paycor User.",
        "operationId": "Cache_PunchStatusType",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "responses": {
         "204": {
            "description": "No content on success",
            "schema": { "$ref": "#/definitions/Object" }
          },
          "400": { "description": "Bad request" },
          "500": { "description": "Internal Server Error" }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/LookupCache/PunchActivityType": {
      "get": {
        "tags": [ "Cache" ],
        "summary": "Publishes the PunchActivity lookup data to the cloud. This is not client specific.",
        "description": "Requires Internal Paycor User.",
        "operationId": "Cache_PunchActivityType",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "responses": {
          "204": {
            "description": "No content on success",
            "schema": { "$ref": "#/definitions/Object" }
          },
          "400": { "description": "Bad request" },
          "500": { "description": "Internal Server Error" }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/LookupCache/ValidIPAddress": {
      "get": {
        "tags": [ "Cache" ],
        "summary": "Publish IP restriction information for a client to the cloud. \r\n Requires Internal Paycor User.",
        "description": "Requires Internal Paycor User.",
        "operationId": "Cache_ValidIPAddress",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "timeLinkId",
            "in": "query",
            "description": "Clients timelinkId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No content on success",
            "schema": { "$ref": "#/definitions/Object" }
          },
          "400": { "description": "Bad request" },
          "500": { "description": "Internal Server Error" }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/LookupCache/Employee": {
      "get": {
        "tags": [ "Cache" ],
        "summary": "Publishes X client employees to the cloud. \r\n Requires Internal Paycor User.",
        "description": "Requires Internal Paycor User.",
        "operationId": "Cache_Employee",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "clientId",
            "in": "query",
            "description": "The client to publish for",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "take",
            "in": "query",
            "description": "The number of employees to take with a default of 1000",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "skip",
            "in": "query",
            "description": "The number of employees to skip with a default of 0",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "204": {
            "description": "No content on success",
            "schema": { "$ref": "#/definitions/Object" }
          },
          "400": { "description": "Bad request" },
          "500": { "description": "Internal Server Error" }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/LookupCache/EmployeeSecuritySummary": {
      "post": {
        "tags": [ "Cache" ],
        "summary": "Publishes the security data for an employee to the cloud. \r\n Requires Internal Paycor User.",
        "description": "Requires Internal Paycor User.",
        "operationId": "Cache_EmployeeSecuritySummary",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "summary",
            "in": "body",
            "description": "A summary object of the employee security data",
            "required": true,
            "schema": { "$ref": "#/definitions/EmployeeSecuritySummary" }
          }
        ],
        "responses": {
          "204": {
            "description": "No content on success",
            "schema": { "$ref": "#/definitions/Object" }
          },
          "400": { "description": "Bad request" },
          "500": { "description": "Internal Server Error" }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/LookupCache/PunchSetting": {
      "get": {
        "tags": [ "Cache" ],
        "summary": "Publishes the punch setting data for a client to the cloud. \r\n Requires Internal Paycor User.",
        "description": "Requires Internal Paycor User.",
        "operationId": "Cache_PunchSetting",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "timeLinkId",
            "in": "query",
            "description": "Clients timelinkId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No content on success",
            "schema": { "$ref": "#/definitions/Object" }
          },
          "400": { "description": "Bad request" },
          "500": { "description": "Internal Server Error" }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/Clock/{timeLinkId}": {
      "get": {
        "tags": [ "Clock" ],
        "summary": "Gets list of configured clocks for a client.\r\n Requires ManageTimeClocks.",
        "description": "Requires ManageTimeClocks.",
        "operationId": "Clock_GetList",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "timeLinkId",
            "in": "path",
            "description": "TimeLinkId for the client",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Clock" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/Clock/Rebuild/{clockId}/{timeLinkId}": {
      "get": {
        "tags": [ "Clock" ],
        "summary": "This will re add employees to a clock for a client.\r\n Requires ManageTimeClocks.",
        "description": "Requires ManageTimeClocks.",
        "operationId": "Clock_Rebuild",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "clockId",
            "in": "path",
            "description": "The clock id to rebuild for",
            "required": true,
            "type": "string"
          },
          {
            "name": "timeLinkId",
            "in": "path",
            "description": "Clients timelinkId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Object" }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/Clock/GetUnassignedList/{timeLinkId}": {
      "get": {
        "tags": [ "Clock" ],
        "summary": "Gets a list of clocks not in a clock group for a client.\r\n Requires ManageTimeClocks.",
        "description": "Requires ManageTimeClocks.",
        "operationId": "Clock_GetUnassignedList",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "timeLinkId",
            "in": "path",
            "description": "Clients timelinkId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Clock" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/Clock/{clockId}/{timeLinkId}": {
      "get": {
        "tags": [ "Clock" ],
        "summary": "Gets a configured clock for a client.\r\n Requires ManageTimeClocks.",
        "description": "ManageTimeClocks.",
        "operationId": "Clock_GetClock",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "clockId",
            "in": "path",
            "description": "Id for the clock (Guid)",
            "required": true,
            "type": "string"
          },
          {
            "name": "timeLinkId",
            "in": "path",
            "description": "Clients timelinkId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Clock" }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/Clock/Lookup/Model": {
      "get": {
        "tags": [ "Clock" ],
        "summary": "Gets a list of clock models to populate the dropdown list. This is not client specific.\r\n Requires Any User.",
        "description": "Requires Any User.",
        "operationId": "Clock_GetModel",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Lookup" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/Clock/Lookup/Connection": {
      "get": {
        "tags": [ "Clock" ],
        "summary": "Gets a list of connection types to populate the dropdown list. This is not client specific.\r\n Requires Any User.",
        "description": "Requires Any User..",
        "operationId": "Clock_GetConnection",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Lookup" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/Clock/Lookup/TimeZone": {
      "get": {
        "tags": [ "Clock" ],
        "summary": "Gets a list of time zones to populate the dropdown list. This is not client specific.\r\n Requires Any User.",
        "description": "Requires Any User.",
        "operationId": "Clock_GetTimeZone",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Lookup" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/CloudClock": {
      "get": {
        "tags": [ "Clock" ],
        "summary": "Gets a clientClock from the cloud.\r\n Requires ManageTimeClocks.",
        "description": "Requires ManageTimeClocks.",
        "operationId": "Clock_ClockStatus",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "serialNumber",
            "in": "query",
            "description": "Serial number of the clock",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ClientClock" }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/Clock/Lookup/FirmwareVersions": {
      "get": {
        "tags": [ "Clock" ],
        "summary": "Gets a list of firmware versions to populate the dropdown list.\r\n Requires ManageTimeClocks.",
        "description": "Requires ManageTimeClocks.",
        "operationId": "Clock_GetFirmwareVersions",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Lookup" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/Clock/GetClockOptionsFile/{optionsFile}": {
      "get": {
        "tags": [ "Clock" ],
        "summary": "Gets the options file from Azure Storage for the clock.\r\n Requires ManageTimeClocks.",
        "description": "Requires ManageTimeClocks.",
        "operationId": "Clock_GetClockOptionsFile",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "optionsFile",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "type": "string" }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/Clock": {
      "put": {
        "tags": [ "Clock" ],
        "summary": "Updates a clock.\r\n Requires ManageTimeClocks.",
        "description": "Requires ManageTimeClocks.",
        "operationId": "Clock_Put",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "clock",
            "in": "body",
            "description": "Clock to be updated (Clock)",
            "required": true,
            "schema": { "$ref": "#/definitions/Clock" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Object" }
          }
        },
        "deprecated": false,                "x-optIn": true
      },
      "post": {
        "tags": [ "Clock" ],
        "summary": "Saves a new clock.\r\n Requires ManageTimeClocks.",
        "description": "Requires ManageTimeClocks.",
        "operationId": "Clock_Post",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "clock",
            "in": "body",
            "description": "Clock to be saved (Clock)",
            "required": true,
            "schema": { "$ref": "#/definitions/Clock" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Object" }
          }
        },
        "deprecated": false,                "x-optIn": true
      },
      "delete": {
        "tags": [ "Clock" ],
        "summary": "Deletes a clock.\r\n Requires ManageTimeClocks.",
        "description": "Requires ManageTimeClocks.",
        "operationId": "Clock_Delete",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ ],
        "parameters": [
          {
            "name": "clock",
            "in": "body",
            "description": "Clock to be deleted (Clock)",
            "required": true,
            "schema": { "$ref": "#/definitions/Clock" }
          }
        ],
        "responses": { "204": { "description": "No Content" } },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/ClockCommand/Reboot/{clientId}/{serialNumber}": {
      "get": {
        "tags": [ "ClockCommand" ],
        "summary": "Reboot a clock.\r\n Requires ManageTimeClocks.",
        "description": "Requires ManageTimeClocks.",
        "operationId": "ClockCommand_Reboot",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "description": "clientId of the client the command is for",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "serialNumber",
            "in": "path",
            "description": "serial number of the clock to be rebooted",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Object" }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/ClockCommand/UpdateFirmware/{serialNumber}/{firmwareVersion}": {
      "get": {
        "tags": [ "ClockCommand" ],
        "summary": "Update firmware of a clock.\r\n Requires ManageTimeClocks.",
        "description": "Requires ManageTimeClocks.",
        "operationId": "ClockCommand_UpdateFirmware",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "serialNumber",
            "in": "path",
            "description": "serial number of the clock to be upgraded",
            "required": true,
            "type": "string"
          },
          {
            "name": "firmwareVersion",
            "in": "path",
            "description": "the firmeareVersion of the clock to be upgraded",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Object" }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/ClockCommand/DeleteClockCommands/{serialNumber}": {
      "get": {
        "tags": [ "ClockCommand" ],
        "summary": "Delete all commands for a specific clock. \r\n Requires Internal Paycor User.",
        "description": "Requires Internal Paycor User.",
        "operationId": "ClockCommand_DeleteClockCommands",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "serialNumber",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Object" }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/ClockGroup/{timeLinkId}": {
      "get": {
        "tags": [ "ClockGroup" ],
        "summary": "Gets the list of clock groups setup for a client.\r\n Requires ManageTimeClocks.",
        "description": "Requires ManageTimeClocks.",
        "operationId": "ClockGroup_Get",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "timeLinkId",
            "in": "path",
            "description": "The id to get the list of groups for",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/ClockGroup" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/ClockGroup/Rebuild/{timeLinkId}": {
      "get": {
        "tags": [ "ClockGroup" ],
        "summary": "Provides the ability to Rebuild clock groups for a time customer.\r\n Requires ManageTimeClocks.",
        "description": "Requires ManageTimeClocks.",
        "operationId": "ClockGroup_Rebuild",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "timeLinkId",
            "in": "path",
            "description": "The time link to rebuild the clock groups for",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Object" }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/ClockGroup": {
      "put": {
        "tags": [ "ClockGroup" ],
        "summary": "Updates an existing clock group.\r\n Requires ManageTimeClocks.",
        "description": "Requires ManageTimeClocks.",
        "operationId": "ClockGroup_Put",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "clockGroup",
            "in": "body",
            "description": "The clock group to update",
            "required": true,
            "schema": { "$ref": "#/definitions/ClockGroup" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Object" }
          }
        },
        "deprecated": false                
      },
      "post": {
        "tags": [ "ClockGroup" ],
        "summary": "Adds a new clock group.\r\n Requires ManageTimeClocks.",
        "description": "Requires ManageTimeClocks.",
        "operationId": "ClockGroup_Post",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "clockGroup",
            "in": "body",
            "description": "The group to add",
            "required": true,
            "schema": { "$ref": "#/definitions/ClockGroup" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Object" }
          }
        },
        "deprecated": false,                "x-optIn": true
      },
      "delete": {
        "tags": [ "ClockGroup" ],
        "summary": "Deletes a clock group.\r\n Requires ManageTimeClocks.",
        "description": "Requires ManageTimeClocks.",
        "operationId": "ClockGroup_Delete",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ ],
        "parameters": [
          {
            "name": "clockGroup",
            "in": "body",
            "description": "The clock group to remove",
            "required": true,
            "schema": { "$ref": "#/definitions/ClockGroup" }
          }
        ],
        "responses": { "204": { "description": "No Content" } },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/Support/PunchActivityTypes": {
      "get": {
        "tags": [ "CloudLookup" ],
        "operationId": "CloudLookup_GetPunchActivityTypes",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/PunchActivityType" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/Support/PunchStatusTypes": {
      "get": {
        "tags": [ "CloudLookup" ],
        "operationId": "CloudLookup_GetPunchStatusTypes",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/PunchStatusType" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/Support/Departments/{clientId}": {
      "get": {
        "tags": [ "CloudLookup" ],
        "operationId": "CloudLookup_GetDepartments",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Department" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/Support/Employees/{clientId}": {
      "get": {
        "tags": [ "CloudLookup" ],
        "operationId": "CloudLookup_GetEmployees",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Employee" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/Support/ValidIPAddresses/{timeLinkId}": {
      "get": {
        "tags": [ "CloudLookup" ],
        "summary": "Get all valid IP address in the cloud for a client. Requires Internal Paycor User.",
        "description": "Requires Internal Paycor User.",
        "operationId": "CloudLookup_GetValidIPAddresses",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "timeLinkId",
            "in": "path",
            "description": "Clients timelinkId.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "type": "string" }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/Support/PunchSettings/{clientId}": {
      "get": {
        "tags": [ "CloudLookup" ],
        "operationId": "CloudLookup_GetPunchSettings",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/PunchSetting" }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/Support/EmployeeSecuritySummary/{timeLinkId}/{badgeNumber}": {
      "get": {
        "tags": [ "CloudLookup" ],
        "summary": "Get employee security summary for a badge number. Requires Internal Paycor User.",
        "description": "Requires Internal Paycor User.",
        "operationId": "CloudLookup_GetEmployeeSecuritySummary",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "timeLinkId",
            "in": "path",
            "description": "Clients timelinkId.",
            "required": true,
            "type": "string"
          },
          {
            "name": "badgeNumber",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/EmployeeSecuritySummary" }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/Support/ClockCommands/{serialNumber}": {
      "get": {
        "tags": [ "CloudLookup" ],
        "operationId": "CloudLookup_GetClockCommands",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "serialNumber",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/ClockCommand" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/Support/ClockCommandString/{serialNumber}": {
      "get": {
        "tags": [ "CloudLookup" ],
        "summary": "Get all clock commands in the cloud for a clock. Requires Internal Paycor User.",
        "description": "Requires Internal Paycor User.",
        "operationId": "CloudLookup_GetClockCommandString",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "serialNumber",
            "in": "path",
            "description": "serial number of the clock",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "type": "string" }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/Support/AddClock": {
      "post": {
        "tags": [ "CloudLookup" ],
        "summary": "Add a clock to the cloud. Requires Internal Paycor User.",
        "description": "Requires Internal Paycor User.",
        "operationId": "CloudLookup_AddClock",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "model",
            "in": "query",
            "description": "string",
            "required": true,
            "type": "string"
          },
          {
            "name": "serialNumber",
            "in": "query",
            "description": "string",
            "required": true,
            "type": "string"
          },
          {
            "name": "clientId",
            "in": "query",
            "description": "int",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "timeLinkId",
            "in": "query",
            "description": "Guid",
            "required": true,
            "type": "string"
          },
          {
            "name": "timeZone",
            "in": "query",
            "description": "string",
            "required": true,
            "type": "string"
          },
          {
            "name": "observesDst",
            "in": "query",
            "description": "bool",
            "required": true,
            "type": "boolean"
          },
          {
            "name": "tipEarningCodeUid",
            "in": "query",
            "description": "string",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Object" }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/Support/GetClock": {
      "get": {
        "tags": [ "CloudLookup" ],
        "summary": "Get a clock from the cloud. Requires Internal Paycor User.",
        "description": "Requires Internal Paycor User.",
        "operationId": "CloudLookup_GetClock",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "serialNumber",
            "in": "query",
            "description": "string",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ClientClock" }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
   "/api/Support/GetClockLogs": {
      "get": {
        "tags": [ "CloudLookup" ],
        "operationId": "CloudLookup_GetClockLogs",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "serialNumber",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "logsRequested",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/ClockLog" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/Support/GetClockLogsByType": {
      "get": {
        "tags": [ "CloudLookup" ],
        "operationId": "CloudLookup_GetClockLogs",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "serialNumber",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "logsRequested",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "logTypeId",
           "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/ClockLog" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/Support/DeleteClock": {
      "get": {
        "tags": [ "CloudLookup" ],
        "summary": "Delete a clock from the cloud based on serial number. Requires Internal Paycor User.",
        "description": "Requires Internal Paycor User.",
        "operationId": "CloudLookup_DeleteClock",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "serialNumber",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Object" }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/Support/EnableClockLogBySerialNumber": {
      "get": {
        "tags": [ "CloudLookup" ],
        "summary": "Enable Clock Log By clock Serial Number. Requires Internal Paycor User.",
        "description": "Requires Internal Paycor User.",
        "operationId": "CloudLookup_EnableClockLogBySerialNumber",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "serialNumber",
            "in": "query",
            "description": "string",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Object" }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/Support/DisableClockLogBySerialNumber": {
      "get": {
        "tags": [ "CloudLookup" ],
        "summary": "Disable Clock Log By clock Serial Number",
        "operationId": "CloudLookup_DisableClockLogBySerialNumber",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "serialNumber",
            "in": "query",
            "description": "string",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Object" }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/Support/GetClocksWithLogEnabled": {
      "get": {
        "tags": [ "CloudLookup" ],
        "summary": "Get Clocks With Log Enabled Requires Internal Paycor User.",
        "description": "Requires Internal Paycor User.",
        "operationId": "CloudLookup_GetClocksWithLogEnabled",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/ClientClock" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/Support/RemoveClockLogsBySerialNumber": {
      "get": {
        "tags": [ "CloudLookup" ],
        "summary": "Delete Clock logs by Serial Number. Requires Internal Paycor User.",
        "description": "Requires Internal Paycor User.",
        "operationId": "CloudLookup_RemoveClockLogsBySerialNumber",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "serialNumber",
            "in": "query",
            "description": "Clock Serial Number",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Object" }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/Company/{clientId}": {
      "get": {
        "tags": [ "Company" ],
        "summary": "Get company information for a given clientId. Requires ManageTimePolicies.",
        "description": "Requires ManageTimePolicies.",
        "operationId": "Company_Get",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "description": "the client to get the company information for",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Company" }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/CreateBadgeAndPins": {
      "post": {
        "tags": [ "CreateBadgeAndPins" ],
        "operationId": "CreateBadgeAndPins_CreateBadgeAndPins",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "badgeAndPin",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/BadgeAndPin" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Tuple[Int32,Int32,String]" }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/DailyAudit/{clientId}/{employeeUid}/{date}": {
      "get": {
        "tags": [ "DailyAudit" ],
        "summary": "Gets the time card audit data for an employee for a day. Requires TimeCardView.",
        "description": "Requires TimeCardView.",
        "operationId": "DailyAudit_Get",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "employeeUid",
            "in": "path",
            "description": "The employee to get the time card for",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "clientId",
            "in": "path",
            "description": "The client the employee belongs to",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "date",
            "in": "path",
            "description": "The date for the time card. \r\n This parameter will be used to get the audit info that includes this date",
            "required": true,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/DailyAudit" }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/DefaultPolicy/Load": {
      "get": {
        "tags": [ "DefaultPolicy" ],
        "summary": "Loads all default policies for the new employee. Requires Internal Paycor User.",
        "description": "Requires Internal Paycor User.",
        "operationId": "DefaultPolicy_Load",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "timeLinkId",
            "in": "query",
            "description": "Client TimeLink to load policies for",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Object" }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/DefaultPolicy/CanCreateDefaultPolicies/{clientId}": {
      "get": {
        "tags": [ "DefaultPolicy" ],
        "summary": "Returns a count of all policies. Requires Internal Paycor User.",
        "description": "Requires Internal Paycor User.",
        "operationId": "DefaultPolicy_CanCreateDefaultPolicies",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "description": "the client id to count all of the policies",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "type": "boolean" }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/Department/{clientId}": {
      "get": {
        "tags": [ "Department" ],
        "summary": "Get department for a client. Requires basic User.",
        "description": "Requires basic User.",
        "operationId": "Department_Get",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "description": "the client to get the department information for",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Department" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/Department/{clientId}/{payrollUid}": {
      "get": {
        "tags": [ "Department" ],
        "summary": "Get department for a client payroll. Requires basic User.",
        "description": "Requires basic User.",
        "operationId": "Department_Get",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "description": "the client to get the department information for",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "payrollUid",
            "in": "path",
            "description": "the payroll to get the department information for",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Department" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/DepartmentTransfer": {
      "get": {
        "tags": [ "DepartmentTransfer" ],
        "summary": "Gets the allowable values for a department transfer. Requires basic User.",
        "description": "Requires basic User.",
        "operationId": "DepartmentTransfer_Get",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/DepartmentTransfer" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/ClientEarningCodes/{clientId}": {
      "get": {
        "tags": [ "EarningCode" ],
        "summary": "Get a list of client earning codes.\r\n Requires ManageTimePolicies and TimeCardView.",
        "description": "Requires ManageTimePolicies and TimeCardView.",
        "operationId": "EarningCode_Get",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "description": "The client to get the codes for",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/ClientEarningCode" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/Employee/{clientId}/{employeeUid}": {
      "get": {
        "tags": [ "Employee" ],
        "summary": "Gets an employee for a given employeeUid/clientId combination. Requires basic User.",
        "description": "Requires basic User.",
        "operationId": "Employee_Get",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "employeeUid",
            "in": "path",
            "description": "The employeeUid to use for lookup",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "clientId",
            "in": "path",
            "description": "The clientId to use for lookup",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Employee" }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/Employee/{clientId}": {
      "get": {
        "tags": [ "Employee" ],
        "summary": "Gets a list of employees for a client. Requires basic User.",
        "description": "Requires basic User.",
        "operationId": "Employee_GetAllForClient",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "description": "The clientId to use for lookup",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Employee" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/Employee/WhosIn/{clientId}": {
      "get": {
        "tags": [ "Employee" ],
        "summary": "Gets a list of employees availability for a user. Requires TimeCardView.",
        "description": "Used by Dashboard - Requires TimeCardView.",
        "operationId": "Employee_WhosIn",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "description": "The clientId to use for lookup",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/EmployeeAvailability" }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/Employee/ApproachingOvertime/{clientId}": {
      "get": {
        "tags": [ "Employee" ],
        "summary": "Gets a list over employees hours worked based on the overtime policies for those employees. (Dashboard)",
        "description": "Used by Dashboard - Requires TimeCardView.",
        "operationId": "Employee_ApproachingOvertime",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "description": "The clientId to use for lookup",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/EmployeeOvertimeSnapshot" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/EmployeePicker/{clientId}": {
      "get": {
        "tags": [ "Employee" ],
        "summary": "Employee Picker: Gets a list of employees.",
        "description": "ScheduleViewPrivilege",
        "operationId": "Employee_GetEmployeeJob",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/EmployeeJob" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/EmployeePolicyExclusion/{clientId}/{employeeUid}": {
      "get": {
        "tags": [ "EmployeeExcludedPolicyGroup" ],
        "summary": "Gets an exclusion for an employee. Requires ManageTimePolicies.",
        "description": "Requires ManageTimePolicies.",
        "operationId": "EmployeeExcludedPolicyGroup_GetExclusionForEmployee",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "description": "The client identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "employeeUid",
            "in": "path",
            "description": "The employee identifier",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/EmployeeExcludedPolicyGroup" }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/EmployeePolicyExclusion": {
      "put": {
        "tags": [ "EmployeeExcludedPolicyGroup" ],
        "summary": "Updates an exclusion that is assigned to an employee. Requires ManageTimePolicies.",
        "description": "Requires ManageTimePolicies.",
        "operationId": "EmployeeExcludedPolicyGroup_Put",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "exclusion",
            "in": "body",
            "description": "The exclusion to update",
            "required": true,
            "schema": { "$ref": "#/definitions/EmployeeExcludedPolicyGroup" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Object" }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/EmployeePolicies/{clientId}/{employeeUid}": {
      "get": {
        "tags": [ "EmployeePolicy" ],
        "summary": "Gets a list of policy assignments for an employee. Requires ManageTimePolicies.",
        "description": "Requires ManageTimePolicies.",
        "operationId": "EmployeePolicy_GetList",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "description": "The client the employee belongs to",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "employeeUid",
            "in": "path",
            "description": "The employee identifier",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
           "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/EmployeePolicy" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/GetEmployeeOvertimePolicies/{clientId}/{employeeUid}": {
      "get": {
        "tags": [ "EmployeePolicy" ],
        "summary": "Gets a list of Overtime Policies assigned to an employee. Requires ManageTimePolicies.",
        "description": "Requires ManageTimePolicies.",
        "operationId": "EmployeePolicy_GetEmployeeOvertimePolicies",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "description": "The client the employee belongs to",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "employeeUid",
            "in": "path",
            "description": "The employee identifier",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/EmployeeEffectiveDatedPolicy" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/GetEmployeeIntervalRoundingPolicies/{clientId}/{employeeUid}": {
      "get": {
        "tags": [ "EmployeePolicy" ],
        "summary": "Gets a list of Rounding Policies assigned to an employee. Requires ManageTimePolicies.",
        "description": "Requires ManageTimePolicies.",
        "operationId": "EmployeePolicy_GetEmployeeIntervalRoundingPolicies",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "description": "The client the employee belongs to",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "employeeUid",
            "in": "path",
            "description": "The employee identifier",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
             "type": "array",
              "items": { "$ref": "#/definitions/EmployeeEffectiveDatedPolicy" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/GetEmployeeTimeCardExceptionPolicies/{clientId}/{employeeUid}": {
      "get": {
        "tags": [ "EmployeePolicy" ],
        "summary": "Gets a list of Time Card Exception Policies assigned to an employee. Requires ManageTimePolicies.",
        "description": "Requires ManageTimePolicies.",
        "operationId": "EmployeePolicy_GetEmployeeTimeCardExceptionPolicies",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "description": "The client the employee belongs to",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "employeeUid",
            "in": "path",
            "description": "The employee identifier",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/EmployeeEffectiveDatedPolicy" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/EmployeePolicy": {
      "put": {
        "tags": [ "EmployeePolicy" ],
        "summary": "Updates a policy that is assigned to an employee. Requires ManageTimePolicies.",
        "description": "Requires ManageTimePolicies.",
        "operationId": "EmployeePolicy_Put",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "policy",
            "in": "body",
            "description": "The policy to update",
            "required": true,
            "schema": { "$ref": "#/definitions/EmployeeEffectiveDatedPolicy" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Object" }
          }
        },
        "deprecated": false,                "x-optIn": true
      },
      "post": {
        "tags": [ "EmployeePolicy" ],
        "summary": "Adds a policy assignment to an employee. Requires ManageTimePolicies.",
        "description": "Requires ManageTimePolicies.",
        "operationId": "EmployeePolicy_Post",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "policy",
            "in": "body",
            "description": "The policy to assign",
            "required": true,
            "schema": { "$ref": "#/definitions/EmployeeEffectiveDatedPolicy" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Object" }
          }
        },
        "deprecated": false,                "x-optIn": true
      },
      "delete": {
        "tags": [ "EmployeePolicy" ],
        "summary": "Removes a policy assignment. Requires ManageTimePolicies.",
        "description": "Requires ManageTimePolicies.",
        "operationId": "EmployeePolicy_Delete",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ ],
        "parameters": [
          {
            "name": "policy",
            "in": "body",
            "description": "The policy to remove",
            "required": true,
            "schema": { "$ref": "#/definitions/EmployeeEffectiveDatedPolicy" }
          }
        ],
        "responses": { "204": { "description": "No Content" } },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/EmployeeSecurity/{clientId}/{employeeUid}": {
      "get": {
        "tags": [ "EmployeeSecurity" ],
        "summary": "Gets an employee security for a client. Requires ViewPerformTimeBadge or EditPerformTimeBadge.",
        "description": "Requires ViewPerformTimeBadge or EditPerformTimeBadge.",
        "operationId": "EmployeeSecurity_GetEmployeeSecurityByEmployeeUid",
       "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "employeeUid",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/EmployeeSecurity" }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/EmployeeSecurity/GetOvertimeWeekTypes": {
      "get": {
        "tags": [ "EmployeeSecurity" ],
        "operationId": "EmployeeSecurity_GetOvertimeWeekTypes",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/TimeOvertimeWeek" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/EmployeeSecurity/GetTimeZoneTypes": {
      "get": {
        "tags": [ "EmployeeSecurity" ],
        "operationId": "EmployeeSecurity_GetTimeZoneTypes",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Lookup" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/EmployeeSecurity/GetClockPrivilegeTypes": {
      "get": {
        "tags": [ "EmployeeSecurity" ],
        "operationId": "EmployeeSecurity_GetClockPrivilegeTypes",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Lookup" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/EmployeeSecurity": {
      "put": {
        "tags": [ "EmployeeSecurity" ],
       "summary": "Updates a valid Employee Security. Requires EditPerformTimeBadge.",
        "description": "Requires EditPerformTimeBadge.",
        "operationId": "EmployeeSecurity_Put",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "security",
            "in": "body",
            "description": "",
            "required": true,
            "schema": { "$ref": "#/definitions/EmployeeSecurity" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Object" }
          }
        },
        "deprecated": false,                "x-optIn": true
      },
      "post": {
        "tags": [ "EmployeeSecurity" ],
        "summary": "Creates a valid Employee Security. Requires EditPerformTimeBadge.",
        "description": "Requires EditPerformTimeBadge.",
        "operationId": "EmployeeSecurity_Post",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "security",
            "in": "body",
            "description": "",
            "required": true,
            "schema": { "$ref": "#/definitions/EmployeeSecurity" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Object" }
          }
        },
        "deprecated": false,                "x-optIn": true
      },
      "delete": {
        "tags": [ "EmployeeSecurity" ],
        "summary": "Deletes a Employee Security. Requires EditPerformTimeBadge.",
        "description": "Requires EditPerformTimeBadge.",
        "operationId": "EmployeeSecurity_Delete",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ ],
        "parameters": [
          {
            "name": "security",
            "in": "body",
            "description": "",
            "required": true,
            "schema": { "$ref": "#/definitions/EmployeeSecurity" }
          }
        ],
        "responses": { "204": { "description": "No Content" } },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/HolidayPolicy/{timeLinkId}": {
      "get": {
        "tags": [ "HolidayPolicy" ],
        "summary": "Gets the list of Holiday policies setup for a client. Requires ManageTimePolicies.",
        "description": "Requires ManageTimePolicies.",
        "operationId": "HolidayPolicy_Get",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "timeLinkId",
            "in": "path",
            "description": "The id to get the list of policies for",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/HolidayPolicy" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/HolidayPolicyById/{policyId}/{timeLinkId}": {
      "get": {
        "tags": [ "HolidayPolicy" ],
        "summary": "Gets a single Holiday policy. Requires ManageTimePolicies.",
        "description": "Requires ManageTimePolicies.",
        "operationId": "HolidayPolicy_GetPolicy",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "policyId",
            "in": "path",
            "description": "The unique identifier for the policy to get",
            "required": true,
            "type": "string"
          },
          {
            "name": "timeLinkId",
            "in": "path",
            "description": "The client the policy belongs to",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/HolidayPolicy" }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/HolidayPolicy/Lookup/HolidayRecurrenceType": {
      "get": {
        "tags": [ "HolidayPolicy" ],
        "summary": "Provides valid values for the Holiday Recurrence Type. Requires ManageTimePolicies.",
        "description": "Requires ManageTimePolicies.",
        "operationId": "HolidayPolicy_GetHolidayRecurrenceTypes",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Lookup" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/HolidayPolicy/Lookup/HolidayRecurrenceDayType": {
      "get": {
        "tags": [ "HolidayPolicy" ],
        "summary": "Provides valid values for the Holiday Recurrence Day Type. Requires ManageTimePolicies.",
        "description": "Requires ManageTimePolicies.",
        "operationId": "HolidayPolicy_GetHolidayRecurrenceDayTypes",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Lookup" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/HolidayPolicy/Lookup/HolidayRecurrencePlacementType": {
      "get": {
        "tags": [ "HolidayPolicy" ],
        "summary": "Provides valid values for the Holiday Recurrence Placement Type. Requires ManageTimePolicies.",
        "description": "Requires ManageTimePolicies.",
        "operationId": "HolidayPolicy_GetHolidayRecurrencePlacementTypes",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Lookup" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/HolidayPolicy/Lookup/HolidayMonthType": {
      "get": {
        "tags": [ "HolidayPolicy" ],
        "summary": "Provides valid values for the Holiday Month. Requires ManageTimePolicies.",
        "description": "Requires ManageTimePolicies.",
        "operationId": "HolidayPolicy_GetHolidayMonthTypes",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Lookup" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/HolidayPolicy": {
      "put": {
        "tags": [ "HolidayPolicy" ],
        "summary": "Updates an existing policy. Requires ManageTimePolicies.",
        "description": "Requires ManageTimePolicies.",
        "operationId": "HolidayPolicy_Put",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "policy",
            "in": "body",
            "description": "The policy to update",
            "required": true,
            "schema": { "$ref": "#/definitions/HolidayPolicy" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Object" }
          }
        },
        "deprecated": false,                "x-optIn": true
      },
      "post": {
        "tags": [ "HolidayPolicy" ],
        "summary": "Adds a new holiday policy. Requires ManageTimePolicies.",
        "description": "Requires ManageTimePolicies.",
        "operationId": "HolidayPolicy_Post",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "policy",
            "in": "body",
            "description": "The policy to add",
            "required": true,
            "schema": { "$ref": "#/definitions/HolidayPolicy" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Object" }
          }
        },
        "deprecated": false,                "x-optIn": true
      },
      "delete": {
        "tags": [ "HolidayPolicy" ],
        "summary": "Deletes a Holiday policy. Requires ManageTimePolicies.",
        "description": "Requires ManageTimePolicies.",
        "operationId": "HolidayPolicy_Delete",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ ],
        "parameters": [
          {
            "name": "policy",
            "in": "body",
            "description": "The policy to remove",
            "required": true,
            "schema": { "$ref": "#/definitions/HolidayPolicy" }
          }
        ],
        "responses": { "204": { "description": "No Content" } },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/Hour/{clientId}/{payGroupUid}/Summary/Current": {
      "get": {
        "tags": [ "Hour" ],
        "summary": "Gets the Current hours for a given paygroup. Requires TimeCardView.",
        "description": "Requires TimeCardView.",
        "operationId": "Hour_GetCurrent",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "description": "The Client the paygroup belongs to",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "payGroupUid",
            "in": "path",
            "description": "The Paygroup to get the hours for",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/PayPeriodHourSummary" }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/Hour/{clientId}/{payGroupUid}/Summary/Previous": {
      "get": {
        "tags": [ "Hour" ],
        "summary": "Gets the Previous hours for a given paygroup. Requires TimeCardView.",
        "description": "Requires TimeCardView.",
        "operationId": "Hour_GetPrevious",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "description": "The Client the paygroup belongs to",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "payGroupUid",
            "in": "path",
            "description": "The Paygroup to get the hours for",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/PayPeriodHourSummary" }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/HoursExclusion/{clientId}": {
      "get": {
        "tags": [ "HoursExclusion" ],
        "summary": "Get a list of client hours exclusion.",
        "description": "Requires ManageTimePolicies",
        "operationId": "HoursExclusion_Get",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "description": "The client to get the codes for",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/HoursExclusion" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/HoursExclusion": {
      "put": {
        "tags": [ "HoursExclusion" ],
        "summary": "Update a Hours exclusion.",
        "description": "Requires ManageTimePolicies.",
        "operationId": "HoursExclusion_Put",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "hoursExclusion",
            "in": "body",
            "description": "",
            "required": true,
            "schema": { "$ref": "#/definitions/HoursExclusion" }
          }
        ],
        "responses": {
          "200": { "description": "Success" },
          "400": { "description": "Error" }
        },
        "deprecated": false,                "x-optIn": true
      },
      "post": {
        "tags": [ "HoursExclusion" ],
        "summary": "Creates a Hours exclusion.",
        "description": "Requires ManageTimePolicies.",
        "operationId": "HoursExclusion_Post",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "hoursExclusion",
            "in": "body",
            "description": "",
            "required": true,
            "schema": { "$ref": "#/definitions/HoursExclusion" }
          }
        ],
        "responses": {
          "200": { "description": "Success" },
          "400": { "description": "Error" }
        },
        "deprecated": false,                "x-optIn": true
      },
      "delete": {
        "tags": [ "HoursExclusion" ],
        "summary": "delete a Hours exclusion.",
        "description": "Requires ManageTimePolicies.",
        "operationId": "HoursExclusion_Delete",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "hoursExclusion",
            "in": "body",
            "description": "",
            "required": true,
            "schema": { "$ref": "#/definitions/HoursExclusion" }
          }
        ],
        "responses": {
          "200": { "description": "Success" },
          "400": { "description": "Error" }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/IntervalRoundingPolicy/{timeLinkId}": {
      "get": {
        "tags": [ "IntervalRoundingPolicy" ],
        "operationId": "IntervalRoundingPolicy_GetList",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "timeLinkId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/IntervalRoundingPolicy" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/IntervalRoundingPolicyById/{policyId}/{timeLinkId}": {
      "get": {
        "tags": [ "IntervalRoundingPolicy" ],
        "summary": "Gets a single rounding policy. Requires ManageTimePolicies.",
        "description": "Requires ManageTimePolicies.",
        "operationId": "IntervalRoundingPolicy_GetPolicy",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "policyId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "timeLinkId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/IntervalRoundingPolicy" }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/IntervalRoundingPolicy/Lookup/Method": {
      "get": {
        "tags": [ "IntervalRoundingPolicy" ],
        "operationId": "IntervalRoundingPolicy_GetMethod",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Lookup" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/IntervalRoundingPolicy/Lookup/Minute": {
      "get": {
        "tags": [ "IntervalRoundingPolicy" ],
        "operationId": "IntervalRoundingPolicy_GetMinute",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/IntervalMinuteType" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/IntervalRoundingPolicy/Lookup/Status": {
      "get": {
        "tags": [ "IntervalRoundingPolicy" ],
        "operationId": "IntervalRoundingPolicy_GetStatus",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Lookup" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/IntervalRoundingPolicy": {
      "put": {
        "tags": [ "IntervalRoundingPolicy" ],
        "summary": "Updates a valid rounding policy. Requires ManageTimePolicies.",
        "description": "Requires ManageTimePolicies.",
        "operationId": "IntervalRoundingPolicy_Put",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "policy",
            "in": "body",
            "description": "",
            "required": true,
            "schema": { "$ref": "#/definitions/IntervalRoundingPolicy" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Object" }
          }
        },
        "deprecated": false,                "x-optIn": true
      },
      "post": {
        "tags": [ "IntervalRoundingPolicy" ],
        "summary": "Creates a valid rounding policy. Requires ManageTimePolicies.",
        "description": "Requires ManageTimePolicies.",
        "operationId": "IntervalRoundingPolicy_Post",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "policy",
            "in": "body",
            "description": "",
            "required": true,
            "schema": { "$ref": "#/definitions/IntervalRoundingPolicy" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Object" }
          }
        },
        "deprecated": false,                "x-optIn": true
     },
      "delete": {
        "tags": [ "IntervalRoundingPolicy" ],
        "summary": "Deletes a rounding policy. Requires ManageTimePolicies.",
        "description": "Requires ManageTimePolicies.",
        "operationId": "IntervalRoundingPolicy_Delete",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ ],
        "parameters": [
          {
            "name": "policy",
            "in": "body",
            "description": "",
            "required": true,
            "schema": { "$ref": "#/definitions/IntervalRoundingPolicy" }
          }
        ],
        "responses": { "204": { "description": "No Content" } },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/ManagePolicy": {
      "get": {
        "tags": [ "ManagePolicy" ],
        "summary": "Gets clint timelinkid. Requires ManageTimePolicies.",
        "description": "Requires ManageTimePolicies.",
        "operationId": "ManagePolicy_Get",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/SecureClientTimeLink" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/MassPunch/CreateDemoData": {
      "get": {
        "tags": [ "MassPunch" ],
        "summary": "Creates punches for given employee in pay period for given date. Doesn't create punches for holidays. Requires Internal Paycor User.",
        "description": "Requires Internal Paycor User.",
        "operationId": "MassPunch_CreateDemoData",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "clientId",
            "in": "query",
            "description": "Client to load punches for",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "employeeUid",
            "in": "query",
            "description": "Employee to load punches for",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "date",
            "in": "query",
            "description": "Date to indicate the pay period to add punches for",
            "required": true,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Object" }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/MealPolicy/{timeLinkId}": {
      "get": {
        "tags": [ "MealPolicy" ],
        "operationId": "MealPolicy_Get",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "timeLinkId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/MealPolicy" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/MealPolicyById/{policyId}/{timeLinkId}": {
      "get": {
        "tags": [ "MealPolicy" ],
        "summary": "Gets a single meal policy. Requires ManageTimePolicies.",
        "description": "Requires ManageTimePolicies.",
        "operationId": "MealPolicy_GetPolicy",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "policyId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "timeLinkId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/MealPolicy" }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/MealPolicy": {
      "put": {
        "tags": [ "MealPolicy" ],
        "summary": "Updates a meal policy. Requires ManageTimePolicies.",
        "description": "Requires ManageTimePolicies.",
        "operationId": "MealPolicy_Put",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "mealPolicy",
            "in": "body",
            "description": "",
            "required": true,
            "schema": { "$ref": "#/definitions/MealPolicy" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Object" }
          }
        },
        "deprecated": false,                "x-optIn": true
      },
      "post": {
        "tags": [ "MealPolicy" ],
        "summary": "Creates a meal policy. Requires ManageTimePolicies.",
        "description": "Requires ManageTimePolicies.",
        "operationId": "MealPolicy_Post",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "mealPolicy",
            "in": "body",
            "description": "",
            "required": true,
            "schema": { "$ref": "#/definitions/MealPolicy" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Object" }
          }
        },
        "deprecated": false,                "x-optIn": true
      },
      "delete": {
        "tags": [ "MealPolicy" ],
        "summary": "Deletes a meal policy. Requires ManageTimePolicies.",
        "description": "Requires ManageTimePolicies.",
        "operationId": "MealPolicy_Delete",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ ],
        "parameters": [
          {
            "name": "mealPolicy",
            "in": "body",
            "description": "",
            "required": true,
            "schema": { "$ref": "#/definitions/MealPolicy" }
          }
        ],
        "responses": { "204": { "description": "No Content" } },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/OtherPay/Unassigned": {
      "post": {
        "tags": [ "OtherPay" ],
        "summary": "Add Unassigned other pay. Requires: TimeSystem",
        "description": "Privilege Required: TimeSystem",
        "operationId": "OtherPay_UnassignedPost",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "otherPay",
            "in": "body",
            "description": "the other pay to be added to the unassigned other pay table",
            "required": true,
            "schema": { "$ref": "#/definitions/OtherPay" }
          }
        ],
        "responses": {
          "200": { "description": "Success" },
          "400": { "description": "Error" }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/OtherPay": {
      "post": {
        "tags": [ "OtherPay" ],
        "summary": "Creates a other pay record. Requires ESSDetailPunch or ESSQuickPunch or AddEditDeleteOtherPay.",
        "description": "Requires ESSDetailPunch or ESSQuickPunch or AddEditDeleteOtherPay.",
        "operationId": "OtherPay_Post",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "otherPay",
            "in": "body",
            "description": "",
            "required": true,
            "schema": { "$ref": "#/definitions/OtherPay" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Object" }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/OtherPayType": {
      "get": {
        "tags": [ "OtherPayType" ],
        "operationId": "OtherPayType_Get",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Lookup" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/OvertimePolicy/{timeLinkId}": {
      "get": {
        "tags": [ "OvertimePolicy" ],
        "operationId": "OvertimePolicy_GetList",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "timeLinkId",
            "in": "path",
            "required": true,
            "type": "string"
          }
       ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/OvertimePolicy" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/OvertimePolicyById/{policyId}/{timeLinkId}": {
      "get": {
        "tags": [ "OvertimePolicy" ],
        "summary": "Gets a single overtime policy. Requires ManageTimePolicies.",
        "description": "Requires ManageTimePolicies.",
        "operationId": "OvertimePolicy_GetPolicy",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "policyId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "timeLinkId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/OvertimePolicy" }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/OvertimePolicy/Lookup/OvertimePolicyTypes": {
      "get": {
        "tags": [ "OvertimePolicy" ],
        "operationId": "OvertimePolicy_GetOvertimePolicyTypes",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Lookup" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/OvertimePolicy/Lookup/DayOfWeekTypes": {
      "get": {
        "tags": [ "OvertimePolicy" ],
        "operationId": "OvertimePolicy_GetDayOfWeekTypes",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Lookup" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/OvertimePolicy": {
      "put": {
        "tags": [ "OvertimePolicy" ],
        "summary": "Updates a valid overtime policy.Requires ManageTimePolicies.",
        "description": "Requires ManageTimePolicies.",
        "operationId": "OvertimePolicy_Put",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "policy",
            "in": "body",
            "description": "",
            "required": true,
            "schema": { "$ref": "#/definitions/OvertimePolicy" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Object" }
          }
        },
        "deprecated": false,                "x-optIn": true
      },
      "post": {
        "tags": [ "OvertimePolicy" ],
        "summary": "Creates a valid overtime policy.Requires ManageTimePolicies.",
        "description": "Requires ManageTimePolicies.",
        "operationId": "OvertimePolicy_Post",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "policy",
            "in": "body",
            "description": "",
            "required": true,
            "schema": { "$ref": "#/definitions/OvertimePolicy" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Object" }
          }
        },
        "deprecated": false,                "x-optIn": true
      },
      "delete": {
        "tags": [ "OvertimePolicy" ],
        "summary": "Deletes a overtime policy. Requires ManageTimePolicies.",
        "description": "Requires ManageTimePolicies.",
        "operationId": "OvertimePolicy_Delete",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ ],
        "parameters": [
          {
            "name": "policy",
            "in": "body",
            "description": "",
            "required": true,
            "schema": { "$ref": "#/definitions/OvertimePolicy" }
          }
        ],
        "responses": { "204": { "description": "No Content" } },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/PaydataHour/{startDate}/{endDate}/{plannerUid}": {
      "get": {
        "tags": [ "PaydataHour" ],
        "summary": "Provides hour data for all employees that are part of a payplanner. This data\r\n is grouped by employee, department, earning and week. Week will always be 0 for\r\n this call. Requires a basic user.",
        "description": "Requires a basic user.",
        "operationId": "PaydataHour_GetByPayPlanner",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "startDate",
            "in": "path",
            "description": "The start date for the pay period",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "endDate",
            "in": "path",
            "description": "The end date for the pay period",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "plannerUid",
            "in": "path",
            "description": "The planner unique identifier",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/PaydataHour" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/PaydataHour/ByWeek/{startDate}/{endDate}/{plannerUid}": {
      "get": {
        "tags": [ "PaydataHour" ],
        "summary": "Provides hour data for all employees that are part of a payplanner. This data\r\n is grouped by employee, department, earning and week. Requires a basic user.",
        "description": "Requires a basic user..",
        "operationId": "PaydataHour_GetByWeek",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "startDate",
            "in": "path",
            "description": "The start date for the pay period",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "endDate",
            "in": "path",
            "description": "The end date for the pay period",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "plannerUid",
            "in": "path",
            "description": "The planner unique identifier",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/PaydataHour" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/Paygroup/{clientId}": {
      "get": {
        "tags": [ "Paygroup" ],
        "summary": "Gets the paygroups the user has access to.(Dashboard)",
        "description": "Used By Dashboard - Requires TimeCardView.",
        "operationId": "Paygroup_Get",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "description": "The client to filter the results for",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Paygroup" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/Payroll/{clientId}": {
      "get": {
        "tags": [ "Payroll" ],
        "summary": "Get payrolls for a client. Requires a basic user.",
        "description": "Requires a basic user.",
        "operationId": "Payroll_Get",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "description": "the client to get the payroll information for",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/PayrollReportFilter" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/GetClientPoliciesByTimeLinkId/{timeLinkId}": {
      "get": {
        "tags": [ "Policy" ],
        "operationId": "Policy_GetList",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "timeLinkId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/PayPolicy" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/GetClientPoliciesByClientId/{clientId}": {
      "get": {
        "tags": [ "Policy" ],
        "operationId": "Policy_GetUnfilteredList",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/PayPolicy" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/GetClientPoliciesByClientIdFilterByEmployeeAndType/{clientId}/{employeeUid}/{filterPolicyType}": {
      "get": {
        "tags": [ "Policy" ],
        "operationId": "Policy_GetFilterByPolicyTypeList",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "employeeUid",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "filterPolicyType",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/PayPolicy" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/PolicyGroup/{timeLinkId}": {
      "get": {
        "tags": [ "PolicyGroup" ],
        "summary": "Gets the list of policy groups setup for a client",
        "description": "Privilege Required: ManageTimePolicies",
        "operationId": "PolicyGroup_Get",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "timeLinkId",
            "in": "path",
            "description": "The id to get the list of groups for",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/PolicyGroup" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/PolicyGroup/Lookup/Paygroups/{clientId}": {
      "get": {
        "tags": [ "PolicyGroup" ],
        "summary": "Gets paygroups for a client",
        "description": "Privilege Required: ManageTimePolicies",
        "operationId": "PolicyGroup_GetPaygroups",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "description": "The clientId to get paygroups for.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Paygroup" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/PolicyGroup": {
      "put": {
        "tags": [ "PolicyGroup" ],
        "summary": "Updates an existing policy group",
        "description": "Privilege Required: ManageTimePolicies",
        "operationId": "PolicyGroup_Put",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "policyGroup",
            "in": "body",
            "description": "The policy group to update",
            "required": true,
            "schema": { "$ref": "#/definitions/PolicyGroup" }
          }
        ],
        "responses": {
          "200": { "description": "Success" },
          "400": { "description": "Error" }
        },
        "deprecated": false,                "x-optIn": true
      },
      "post": {
        "tags": [ "PolicyGroup" ],
        "summary": "Adds a new policy group",
        "description": "Privilege Required: ManageTimePolicies",
        "operationId": "PolicyGroup_Post",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "policyGroup",
            "in": "body",
            "description": "The group to add",
            "required": true,
            "schema": { "$ref": "#/definitions/PolicyGroup" }
          }
        ],
        "responses": {
          "200": { "description": "Success" },
          "400": { "description": "Error" }
        },
        "deprecated": false,                "x-optIn": true
      },
      "delete": {
        "tags": [ "PolicyGroup" ],
        "summary": "Deletes a policy group",
        "description": "Privilege Required: ManageTimePolicies",
        "operationId": "PolicyGroup_Delete",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ ],
        "parameters": [
          {
            "name": "policyGroup",
            "in": "body",
            "description": "The policy group to remove",
            "required": true,
            "schema": { "$ref": "#/definitions/PolicyGroup" }
          }
        ],
        "responses": { "204": { "description": "No Content" } },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/Punch/PostQuick/{clientId}/{employeeUid}/{baseDepartment}": {
      "post": {
        "tags": [ "Punch" ],
        "summary": "Add Quick punch. Requires: ESSQuickPunch",
        "description": "Privilege Required: ESSQuickPunch",
        "operationId": "Punch_PostQuick",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "description": "The client the employee belongs to",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "employeeUid",
            "in": "path",
            "description": "The employee",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "baseDepartment",
            "in": "path",
            "description": "employee base (default) department",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": { "description": "Success" },
          "400": { "description": "Error" }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/Punch/Unassigned": {
      "post": {
        "tags": [ "Punch" ],
        "summary": "Add Unassigned punch. Requires: TimeSystem",
        "description": "Privilege Required: ESSQuickPunch",
        "operationId": "Punch_UnassignedPost",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "punch",
            "in": "body",
            "description": "the punch to be added to the unassigned punch table",
            "required": true,
            "schema": { "$ref": "#/definitions/Punch" }
          }
        ],
        "responses": {
          "200": { "description": "Success" },
          "400": { "description": "Error" }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/Punch": {
      "post": {
        "tags": [ "Punch" ],
        "summary": "Add a punch. Requires: Authorize",
        "description": "Privilege Required: Authorized user",
        "operationId": "Punch_Post",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "punch",
            "in": "body",
            "description": "Punch to be added",
            "required": true,
            "schema": { "$ref": "#/definitions/Punch" }
          }
        ],
        "responses": {
          "200": { "description": "Success" },
          "400": { "description": "Error" }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/PunchActivityType": {
      "get": {
        "tags": [ "PunchActivityType" ],
        "summary": "Retrive PunchActivityType. Requires: authorized",
        "description": "Privilege Required: authorized user",
        "operationId": "PunchActivityType_Get",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/PunchActivityType" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/punchprocess/{clientId}/{employeeUid}": {
      "get": {
        "tags": [ "PunchProcess" ],
        "summary": "Start the Punch Proccess for an employee with now as the process date. Requires: AddEditDeactivatePunches, AddEditDeleteHours, and RecalculateTimeCard",
        "description": "Process Date is Now <br /> Privilege Required: AddEditDeactivatePunches, AddEditDeleteHours, and RecalculateTimeCard",
        "operationId": "PunchProcess_Process",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "description": "The client the employee belongs to",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "employeeUid",
            "in": "path",
            "description": "the employee to process",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "forceProcess",
            "in": "query",
            "description": "forceProcess (optional) the default = false",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Object" }
          },
          "204": { "description": "Success" },
          "400": { "description": "Error" }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/punchprocess/{clientId}/{employeeUid}/{date}": {
      "get": {
        "tags": [ "PunchProcess" ],
        "summary": "Punch Process for an employee with spacific process date. Requires: AddEditDeactivatePunches, AddEditDeleteHours, and RecalculateTimeCard",
        "description": "Privilege Required: AddEditDeactivatePunches, AddEditDeleteHours, and RecalculateTimeCard",
        "operationId": "PunchProcess_Process",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "description": "The client the employee belongs to",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "employeeUid",
            "in": "path",
            "description": "the employee to process",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "date",
            "in": "path",
            "description": "process date",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "forceProcess",
            "in": "query",
            "description": "forceProcess (optional) the default = false",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": { "description": "Success" },
          "400": { "description": "Error" }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/punchprocess/process": {
      "get": {
        "tags": [ "PunchProcess" ],
        "summary": "Start the Punch Proccess for an employee. Requires: AddEditDeactivatePunches, AddEditDeleteHours, and RecalculateTimeCard",
        "description": "Privilege Required: AddEditDeactivatePunches, AddEditDeleteHours, and RecalculateTimeCard",
        "operationId": "PunchProcess_ProcessQueryStrings",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "clientId",
            "in": "query",
            "description": "The client the employee belongs to",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "employeeUid",
            "in": "query",
            "description": "the employee to process",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "date",
            "in": "query",
            "description": "process date",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "forceProcess",
            "in": "query",
            "description": "forceProcess (optional) the default = false",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": { "description": "Success" },
          "400": { "description": "Error" }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/PunchSetting/Lookup/BadgeEmployeeTypes": {
      "get": {
        "tags": [ "PunchSetting" ],
        "summary": "Get Badge Employee Types",
        "description": "Privilege Required: Authorized user",
        "operationId": "PunchSetting_GetBadgeEmployeeTypes",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Lookup" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/PunchSetting/Lookup/BadgeSourceTypes": {
      "get": {
        "tags": [ "PunchSetting" ],
        "summary": "Get Badge Source Types",
        "description": "Privilege Required: Authorized user",
        "operationId": "PunchSetting_GetBadgeSourceTypes",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Lookup" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/PunchSetting/{clientId}": {
      "get": {
        "tags": [ "PunchSetting" ],
        "summary": "Get Punch Setting for a client by cliendId",
        "description": "Privilege Required: Authorized user",
        "operationId": "PunchSetting_GetPunchSetting",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "description": "the client to get the punch setting for",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/PunchSetting" }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/PunchSetting/{timeLinkId}": {
      "get": {
        "tags": [ "PunchSetting" ],
        "summary": "Get Punch Setting for a client by timelinkid",
        "description": "Privilege Required: ManageTimePolicies",
        "operationId": "PunchSetting_GetPunchSetting",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "timeLinkId",
            "in": "path",
            "description": "timelinkid for client",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/PunchSetting" }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/PunchSetting/Lookup/CrossingMidnightRuleTypes": {
      "get": {
        "tags": [ "PunchSetting" ],
        "summary": "Get Crossing Midnight Rule Types",
        "description": "Privilege Required: ManageTimePolicies",
        "operationId": "PunchSetting_GetCrossingMidnightRuleTypes",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Lookup" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/PunchSetting": {
      "put": {
        "tags": [ "PunchSetting" ],
        "summary": "Update Punch Setting for a client",
        "description": "Privilege Required: ManageTimePolicies",
        "operationId": "PunchSetting_Put",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "setting",
            "in": "body",
            "description": "Punch Setting",
            "required": true,
            "schema": { "$ref": "#/definitions/PunchSetting" }
          }
        ],
        "responses": {
          "200": { "description": "Success" },
          "400": { "description": "Error" }
        },
        "deprecated": false,                "x-optIn": true
      },
      "post": {
        "tags": [ "PunchSetting" ],
        "summary": "Add Punch Setting for a client",
        "description": "Privilege Required: ManageTimePolicies",
        "operationId": "PunchSetting_Post",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "setting",
            "in": "body",
            "description": "Punch Setting",
            "required": true,
            "schema": { "$ref": "#/definitions/PunchSetting" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Object" }
          },
          "201": { "description": "Success" },
          "400": { "description": "Error" }
        },
        "deprecated": false,                "x-optIn": true
      },
      "delete": {
        "tags": [ "PunchSetting" ],
        "summary": "Delete Punch Setting for a client",
        "description": "Privilege Required: ManageTimePolicies",
        "operationId": "PunchSetting_Delete",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ ],
        "parameters": [
          {
            "name": "setting",
            "in": "body",
            "description": "Punch Setting",
            "required": true,
            "schema": { "$ref": "#/definitions/PunchSetting" }
          }
        ],
        "responses": { "204": { "description": "No Content" } },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/PunchStatusType": {
      "get": {
        "tags": [ "PunchStatusType" ],
        "summary": "Gets Punch Status Types",
        "description": "Privilege Required: Authorized user",
        "operationId": "PunchStatusType_Get",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/PunchStatusType" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/ReportFilter/Clients": {
      "get": {
        "tags": [ "ReportFilter" ],
        "summary": "Retrieves filter list of clients for current user.",
        "operationId": "ReportFilter_Clients",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/ClientReportFilter" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/ReportFilter/Payrolls": {
      "get": {
        "tags": [ "ReportFilter" ],
        "summary": "Retrieves filter list of payrolls for current user.",
        "operationId": "ReportFilter_Payrolls",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/PayrollReportFilter" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/ReportFilter/Departments": {
      "get": {
        "tags": [ "ReportFilter" ],
        "summary": "Retrieves filter list of departments for current user.",
        "operationId": "ReportFilter_Departments",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/DepartmentReportFilter" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/ReportFilter/Employees": {
      "get": {
        "tags": [ "ReportFilter" ],
        "summary": "Retrieves filter list of employees for current user.",
        "operationId": "ReportFilter_Employees",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/EmployeeReportFilter" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/ReportFilter/Paygroups": {
      "get": {
        "tags": [ "ReportFilter" ],
        "summary": "Retrieves filter list of Paygroups for current user.",
        "description": "Privilege Required: TimeReports",
        "operationId": "ReportFilter_Paygroups",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/PaygroupReportFilter" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/ReportFilter/EarningCodes": {
      "get": {
        "tags": [ "ReportFilter" ],
        "summary": "Retrieves filter list of Earnings Codes for current user",
        "description": "Privilege Required: TimeReports",
        "operationId": "ReportFilter_EarningCodes",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/EarningCodeReportFilter" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/ReportFilter/Test": {
      "get": {
        "tags": [ "ReportFilter" ],
        "summary": "Support API to test if Reporting code is working. If not, it will return exceptions.\r\n Required Priv: PaycorRoleEnforcer",
        "description": "Privilege Required: Paycor User",
        "operationId": "ReportFilter_Test",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "report",
            "in": "query",
            "description": "Report shortname you want to test. (approval, hourdetail, hoursummary, departmentsummary, punchdetail, timecard, otherpay, exception, punchaudit)",
            "required": true,
            "type": "string"
         },
          {
            "name": "clientUserId",
            "in": "query",
            "description": "ClientUserId of the user who's running the report.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "Success" },
          "500": { "description": "Error" }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/SelfServicePunch/{clientId}/{employeeUid}/{baseDepartment}": {
      "get": {
        "tags": [ "SelfServicePunch" ],
        "operationId": "SelfServicePunch_Get",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "employeeUid",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "baseDepartment",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Punch" }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/SelfServicePunch": {
      "post": {
        "tags": [ "SelfServicePunch" ],
        "summary": "Add a punch from ESS",
        "description": "Privilege Required: IPAddressValidation",
        "operationId": "SelfServicePunch_Post",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "punch",
            "in": "body",
            "description": "Punch to be added",
            "required": true,
            "schema": { "$ref": "#/definitions/Punch" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Object" }
          },
          "204": { "description": "Success" },
          "400": { "description": "Error" }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/Import/Session/{clientId}": {
      "get": {
        "tags": [ "Session" ],
        "summary": "Gets the list of Sessions for a client",
        "description": "Privilege Required: AddEditDeleteOtherPay, AddEditDeactivatePunches, AddEditDeleteHours",
        "operationId": "Session_GetList",
        "consumes": [ ],
       "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "description": "The id to get the list of sessions for the client",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Session" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/Import/Session/{sessionId}/{clientId}": {
      "get": {
        "tags": [ "Session" ],
        "summary": "Gets a of Sessions",
        "description": "Privilege Required: AddEditDeleteOtherPay, AddEditDeactivatePunches, AddEditDeleteHours",
        "operationId": "Session_Get",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "description": "The id of the session requested",
            "required": true,
            "type": "string"
          },
          {
            "name": "clientId",
            "in": "path",
            "description": "The timeLink of the client",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Session" }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/Import/Session": {
      "put": {
        "tags": [ "Session" ],
        "summary": "Updates an existing session",
        "description": "Privilege Required: AddEditDeleteOtherPay, AddEditDeactivatePunches, AddEditDeleteHours",
        "operationId": "Session_Put",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "session",
            "in": "body",
            "description": "Session to update",
            "required": true,
            "schema": { "$ref": "#/definitions/Session" }
          }
        ],
        "responses": {
          "200": { "description": "Success" },
          "400": { "description": "Error" }
        },
        "deprecated": false,                "x-optIn": true
      },
      "post": {
        "tags": [ "Session" ],
        "summary": "Adds a new Session with the status set to 0 or Draft",
        "description": "Privilege Required: AddEditDeleteOtherPay, AddEditDeactivatePunches, AddEditDeleteHours",
        "operationId": "Session_Post",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "session",
            "in": "body",
            "description": "The session to add",
            "required": true,
            "schema": { "$ref": "#/definitions/Session" }
          }
        ],
        "responses": {
          "200": { "description": "Success" },
          "400": { "description": "Error" }
        },
        "deprecated": false,                "x-optIn": true
      },
      "delete": {
        "tags": [ "Session" ],
        "summary": "Deletes a Session",
        "description": "Privilege Required: AddEditDeleteOtherPay, AddEditDeactivatePunches, AddEditDeleteHours",
        "operationId": "Session_Delete",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ ],
        "parameters": [
          {
            "name": "session",
            "in": "body",
            "description": "Session to remove",
            "required": true,
            "schema": { "$ref": "#/definitions/Session" }
          }
        ],
        "responses": { "204": { "description": "No Content" } },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/import/Hour": {
      "post": {
        "tags": [ "SessionHour" ],
        "summary": "Creates a single hour and adds it to a session. Requires: AddEditDeleteHours",
        "description": "Privilege Required: AddEditDeleteHours",
        "operationId": "SessionHour_CreateSessionHour",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "hour",
            "in": "body",
            "description": "The hour",
            "required": true,
            "schema": { "$ref": "#/definitions/SessionHour" }
          }
        ],
        "responses": {
          "200": { "description": "Success" },
          "400": { "description": "Error" }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/Import/Punch": {
      "post": {
        "tags": [ "SessionPunch" ],
        "summary": "Creates a single punch and adds it to a session.",
        "description": "Privilege Required: AddEditDeactivatePunches",
        "operationId": "SessionPunch_CreateSessionPunch",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "punch",
            "in": "body",
            "description": "The punch to add to the session",
            "required": true,
            "schema": { "$ref": "#/definitions/SessionPunch" }
          }
        ],
        "responses": {
          "200": { "description": "Success" },
          "400": { "description": "Error" }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/Shift/{clientId}": {
      "get": {
        "tags": [ "Shift" ],
        "summary": "Gets a valid list of shifts. Requires ShiftViewPrivilege.",
        "description": "Requires ShiftViewPrivilege.",
        "operationId": "Shift_GetList",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Shift" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/Shift/Single/{shiftId}": {
      "get": {
        "tags": [ "Shift" ],
        "summary": "Gets a single shift. Requires ShiftViewPrivilege.",
        "description": "Requires ShiftViewPrivilege.",
        "operationId": "Shift_GetShift",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "shiftId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Shift" }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/Shift/Lookup/ShiftTypes": {
      "get": {
        "tags": [ "Shift" ],
        "operationId": "Shift_GetShiftTypes",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Lookup" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/Shift/Lookup/ColorTypes": {
      "get": {
        "tags": [ "Shift" ],
        "summary": "Gets list of colors types. Requires ShiftViewPrivilege.",
        "description": "Requires ShiftViewPrivilege.",
        "operationId": "Shift_GetColors",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/ColorType" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/Shift/Lookup/Jobs/{clientId}": {
      "get": {
        "tags": [ "Shift" ],
        "summary": "Gets a valid list of jobs for a client.",
        "description": "Requires ShiftViewPrivilege.",
        "operationId": "Shift_GetJobsByClientId",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Job" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/Shift": {
      "put": {
        "tags": [ "Shift" ],
        "summary": "Updates a valid Shift.Requires ShiftEditPrivilege.",
        "description": "Requires ShiftEditPrivilege.",
        "operationId": "Shift_Put",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "shift",
            "in": "body",
            "description": "",
            "required": true,
            "schema": { "$ref": "#/definitions/Shift" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Object" }
          }
        },
        "deprecated": false,                "x-optIn": true
      },
      "post": {
        "tags": [ "Shift" ],
        "summary": "Creates a valid shift.Requires ShiftEditPrivilege.",
        "description": "Requires ShiftEditPrivilege.",
        "operationId": "Shift_Post",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "shift",
            "in": "body",
            "description": "",
            "required": true,
            "schema": { "$ref": "#/definitions/Shift" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Object" }
          }
        },
        "deprecated": false,                "x-optIn": true
      },
      "delete": {
        "tags": [ "Shift" ],
        "summary": "Deletes a shift. Requires ShiftEditPrivilege.",
        "description": "Requires ShiftEditPrivilege.",
        "operationId": "Shift_Delete",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ ],
        "parameters": [
          {
            "name": "shift",
            "in": "body",
            "description": "",
            "required": true,
            "schema": { "$ref": "#/definitions/Shift" }
          }
        ],
        "responses": { "204": { "description": "No Content" } },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/SubmitTime/{clientId}": {
      "get": {
        "tags": [ "SubmitTime" ],
        "summary": "Gets the paygroups the user has access to. Requires: ApproveAndLockPayrun",
        "description": "Priv Required: ApproveAndLockPayrun",
        "operationId": "SubmitTime_Get",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "description": "The client to filter the results for",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Paygroup" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/SubmitTime/{clientId}/{paygroupUid}/Summary/Current": {
      "get": {
        "tags": [ "SubmitTime" ],
        "summary": "Gets the Current Summary for a given paygroup. Requires: ApproveAndLockPayrun",
        "description": "Priv Required: ApproveAndLockPayrun",
        "operationId": "SubmitTime_GetSummaryCurrent",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "description": "The Client the paygroup belongs to",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "paygroupUid",
            "in": "path",
            "description": "The Paygroup to get the summary for",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/SubmitTimeSummary" }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/SubmitTime/{clientId}/{paygroupUid}/Summary": {
      "put": {
        "tags": [ "SubmitTime" ],
        "summary": "Approve the summary and send to paydata. Requires: ApproveAndLockPayrun",
        "description": "Priv Required: ApproveAndLockPayrun",
        "operationId": "SubmitTime_PutSummaryCurrent",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "summary",
            "in": "body",
            "description": "The summary to approve",
            "required": true,
            "schema": { "$ref": "#/definitions/SubmitTimeSummary" }
          },
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "paygroupUid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "Success" },
          "400": { "description": "Error" }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/SubmitTime/{clientId}/{paygroupUid}/Summary/Previous": {
      "get": {
        "tags": [ "SubmitTime" ],
        "summary": "Gets the Previous Summary for a given paygroup. Requires: ApproveAndLockPayrun",
        "description": "Priv Required: ApproveAndLockPayrun",
        "operationId": "SubmitTime_GetSummaryPrevious",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "description": "The Client the paygroup belongs to",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "paygroupUid",
            "in": "path",
            "description": "The Paygroup to get the summary for",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/SubmitTimeSummary" }
          }
        },
       "deprecated": false,                "x-optIn": true
      }
    },
    "/api/SubmitTime/GetPayImportSessionCount/{plannerUid}": {
      "get": {
        "tags": [ "SubmitTime" ],
        "summary": "Gets the count of a PayImportSessionTracker. Requires: ApproveAndLockPayrun",
        "description": "Priv Required: ApproveAndLockPayrun",
        "operationId": "SubmitTime_GetPayImportSessionCount",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "plannerUid",
            "in": "path",
            "description": "The Pay Import Session to be checked",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/SubmitTime/GetErrorPayImportSessionList/{clientId}/{plannerUid}": {
      "get": {
        "tags": [ "SubmitTime" ],
        "summary": "Gets all Submit Time Errors. Requires: ApproveAndLockPayrun",
        "description": "Priv Required: ApproveAndLockPayrun",
        "operationId": "SubmitTime_GetErrorPayImportSessionList",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "description": "The Client to be checked",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "plannerUid",
            "in": "path",
            "description": "The Pay Import Session to be checked",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/PayImportSessionTransactionLog" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/SubmitTime/SubmitEarning": {
      "get": {
        "tags": [ "SubmitTime" ],
        "summary": "Takes nessary values to rebuild an earning to then send to the payroll system. Requires: ApproveAndLockPayrun",
        "description": "Priv Required: ApproveAndLockPayrun",
        "operationId": "SubmitTime_SubmitEarning",
        "consumes": [ ],
        "produces": [ ],
        "parameters": [
          {
            "name": "payImportSessionTrackerId",
            "in": "query",
            "description": "The pay import session tracker this earning belongs to",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeUid",
            "in": "query",
            "description": "This is the employee the earning belongs to",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "employeeNumber",
            "in": "query",
            "description": "This is the employee the earning belongs to",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "earningUid",
            "in": "query",
            "description": "This is the earning of the hour or amount",
            "required": true,
            "type": "string"
          },
          {
            "name": "code",
            "in": "query",
            "description": "This is the earning of the hour or amount",
            "required": true,
            "type": "string"
          },
          {
            "name": "departmentUid",
            "in": "query",
            "description": "This is the department the earning belongs to",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "department",
            "in": "query",
            "description": "This is the department the earning belongs to",
            "required": true,
            "type": "string"
          },
          {
            "name": "hours",
            "in": "query",
            "description": "This is the hours. this has a value if it is an hour import",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "amount",
            "in": "query",
            "description": "This is the amount. this has a value if it is an other pay import",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "checkNumber",
            "in": "query",
            "description": "This is the check number",
            "required": true,
            "type": "string",
            "format": "byte"
          }
        ],
        "responses": { "204": { "description": "No Content" } },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/SystemCheck/HealthCheck": {
      "get": {
        "tags": [ "SystemCheck" ],
        "summary": "Checks the external dependancies of the application",
        "description": "Privilege Required: Paycor Internal User",
        "operationId": "SystemCheck_HealthCheck",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/EnvironmentValidation" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/SystemCheck/PulseCheck": {
      "get": {
        "tags": [ "SystemCheck" ],
        "summary": "Checks that the application is responsive",
        "operationId": "SystemCheck_PulseCheck",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "type": "string" }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/SystemCheck/LogCheck": {
      "get": {
        "tags": [ "SystemCheck" ],
        "summary": "Checks that logging is working for all levels of logging (Error, Warning, Information)",
        "description": "Privilege Required: Paycor Internal User",
        "operationId": "SystemCheck_LogCheck",
        "consumes": [ ],
        "produces": [ ],
        "responses": { "204": { "description": "No Content" } },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/SystemCheck/ThrowError": {
      "get": {
        "tags": [ "SystemCheck" ],
        "summary": "Checks that unhandled exceptions are logged",
        "description": "Privilege Required: Paycor Internal User",
        "operationId": "SystemCheck_ThrowError",
        "consumes": [ ],
        "produces": [ ],
        "responses": { "204": { "description": "No Content" } },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/SystemCheck/TimeFromAzureToTimeCard": {
      "get": {
        "tags": [ "SystemCheck" ],
        "summary": "Gets the average time (in ms) it takes for an azure punch to appear on the timecard",
        "description": "Privilege Required: Paycor Internal User",
        "operationId": "SystemCheck_TimeFromAzureToTimeCard",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "double",
              "type": "number"
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/SystemCheck/AzurePunchesPerHour": {
      "get": {
        "tags": [ "SystemCheck" ],
        "summary": "Gets the number of Azure punches for each hour within a given date range",
        "description": "Privilege Required: Paycor Internal User",
        "operationId": "SystemCheck_AzurePunchesPerHour",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "format": "double",
                "type": "number"
              }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/SystemCheck/DeadLetter": {
      "get": {
        "tags": [ "SystemCheck" ],
        "summary": "Get DeadLetter",
        "description": "Privilege Required: Paycor Internal User",
        "operationId": "SystemCheck_DeadLetter",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "queueName",
            "in": "query",
            "description": "work queue name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "Success" },
          "400": { "description": "Error" }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/SystemCheck/DeadLetter/Clear": {
      "get": {
        "tags": [ "SystemCheck" ],
        "summary": "Clear DeadLetter queue",
        "description": "Privilege Required: Paycor Internal User",
        "operationId": "SystemCheck_ClearDeadLetter",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "queueName",
            "in": "query",
            "description": "work queue name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "Success" },
          "400": { "description": "Error" }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/SystemCheck/Clocks": {
      "get": {
        "tags": [ "SystemCheck" ],
        "summary": "Get Status of client clocks",
        "description": "Privilege Required: Paycor Internal User",
        "operationId": "SystemCheck_ClockStatus",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/ClientClock" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/SystemCheck/CloudLogs": {
      "get": {
        "tags": [ "SystemCheck" ],
        "summary": "Get cloud logs based on filters provided",
        "description": "Privilege Required: Paycor Internal User",
        "operationId": "SystemCheck_GetCloudLogs",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date for logs you want to see",
            "required": true,
            "type": "string",
           "format": "date-time"
          },
          {
            "name": "clientId",
            "in": "query",
            "description": "Client that you want to see logs for. Can be null to return all clients",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "category",
            "in": "query",
            "description": "Category to see logs for. Can be blank or null to see all log categories",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/CloudLog" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/SystemCheck/DeleteCloudLogs": {
      "get": {
        "tags": [ "SystemCheck" ],
        "summary": "Delete cloud logs before a certain date",
        "description": "Privilege Required: Paycor Internal User",
        "operationId": "SystemCheck_GetCloudLogs",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "cutoffDate",
            "in": "query",
            "description": "All logs before this date will be deleted",
            "required": true,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Object" }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/TimeCard/{clientId}/{employeeUid}": {
      "get": {
        "tags": [ "TimeCard" ],
        "summary": "Gets the time card for an employee for a day",
        "description": "Priv Required: TimeCardView",
        "operationId": "TimeCard_Get",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "employeeUid",
            "in": "path",
            "description": "The employee to get the time card for",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "clientId",
            "in": "path",
            "description": "The client the employee belongs to",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "date",
            "in": "query",
            "description": "The date for the time card. \r\n This parameter will be used to get the time card that includes this date",
            "required": true,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/TimeCard" }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/TimeCard/Notes/{clientId}/{employeeUid}": {
      "put": {
        "tags": [ "TimeCard" ],
        "summary": "Updates a day note on a time card",
        "description": "Priv Required: EditDailyNotes",
        "operationId": "TimeCard_Put",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "description": "The client",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "employeeUid",
            "in": "path",
            "description": "The employee",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "timeCardNotes",
            "in": "body",
            "description": "The Note",
            "required": true,
            "schema": { "$ref": "#/definitions/TimeCardDayNotes" }
          }
        ],
        "responses": {
          "200": { "description": "Success" },
          "400": { "description": "Error" }
        },
        "deprecated": false,                "x-optIn": true
      },
      "post": {
        "tags": [ "TimeCard" ],
        "summary": "Inserts a new day note on a time card",
        "description": "Priv Required: EditDailyNotes",
        "operationId": "TimeCard_Post",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "description": "The client",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "employeeUid",
            "in": "path",
            "description": "The employee",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "timeCardNote",
            "in": "body",
            "description": "The new Note",
            "required": true,
            "schema": { "$ref": "#/definitions/TimeCardDayNotes" }
          }
        ],
        "responses": {
         "200": { "description": "Success" },
          "400": { "description": "Error" }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/TimeCard/Notes/{clientId}/{employeeUid}/{date}": {
      "get": {
        "tags": [ "TimeCard" ],
        "summary": "Gets the notes for an employee on a given day.",
        "description": "Priv Required: TimeCardView",
        "operationId": "TimeCard_Notes",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "description": "The client",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "employeeUid",
            "in": "path",
            "description": "The employee",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "date",
            "in": "path",
            "description": "The day to get the notes for",
            "required": true,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/TimeCardDayNotes" }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/TimeCard/Reset/{clientId}/{employeeUid}/{date}": {
      "post": {
        "tags": [ "TimeCard" ],
        "summary": "Resets Time Card for an Employee. Requires: ResetTimeCard",
        "description": "Priv Required: ResetTimeCard",
        "operationId": "TimeCard_Reset",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "description": "The client ID for the employee",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "employeeUid",
            "in": "path",
            "description": "The employees UID",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "date",
            "in": "path",
            "description": "Date on which to reset Time Card",
            "required": true,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": { "description": "Success" },
          "404": { "description": "Not Allowed" }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/TimeCard": {
      "put": {
        "tags": [ "TimeCard" ],
        "summary": "Updates the time card. Data that can be updated includes; Punches (in and out), Hours, Deductions and Other Pay.\r\n This will kick off processing for the time card. This means that if any new policies or punches exist for the employee\r\n they will show up after the update",
        "description": "Priv Required: AddEditDeactivatePunches, AddEditDeleteHours",
        "operationId": "TimeCard_Put",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "timeCard",
            "in": "body",
            "description": "The time card to update",
            "required": true,
            "schema": { "$ref": "#/definitions/TimeCard" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Object" }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/TimeCardApproval/{employeeUid}/punchProcessSetId": {
      "get": {
        "tags": [ "TimeCardApproval" ],
        "summary": "A list of Time Card Approvals for an employee and a punch process set.",
        "operationId": "TimeCardApproval_GetTimeCardApprovals",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "employeeUid",
            "in": "path",
            "description": "the employee",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "punchProcessSetId",
            "in": "query",
            "description": "ID for the punch process set",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/TimeCardApproval" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/TimeCardApproval/Create/{clientId}/{employeeUid}/{punchProcessSetId}": {
      "get": {
        "tags": [ "TimeCardApproval" ],
        "summary": "This will create a Time card approval with the data submitted for any user that has rights.",
        "description": "Privilege Required: ApproveTimeCardEmployee, ApproveTimeCardSupervisor, and ApproveTimeCardDirector",
        "operationId": "TimeCardApproval_Create",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "description": "The client the employee belongs to",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "employeeUid",
            "in": "path",
            "description": "The employee uid",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "punchProcessSetId",
            "in": "path",
            "description": "punchProcessSetId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "Success" },
          "400": { "description": "Error" }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/TimeCardApproval/MassCreate": {
      "post": {
        "tags": [ "TimeCardApproval" ],
        "summary": "This will create a Time card approvals for multiple employees. (Dashboard)",
        "description": "Used by Dashboard- Privilege Required: ApproveTimeCardEmployee, ApproveTimeCardSupervisor, ApproveTimeCardDirector",
        "operationId": "TimeCardApproval_PostMass",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "approvals",
            "in": "body",
            "description": "list of timecardApprovals",
            "required": true,
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/TimeCardApprovalBase" }
            }
          }
        ],
        "responses": {
          "200": { "description": "Success" },
          "400": { "description": "Error" }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/TimeCardApproval": {
      "post": {
        "tags": [ "TimeCardApproval" ],
        "summary": "This will create a Time card approval for any user that has rights.",
        "operationId": "TimeCardApproval_Post",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "timeCardApproval",
            "in": "body",
            "description": "the time card approval",
            "required": true,
            "schema": { "$ref": "#/definitions/TimeCardApproval" }
          }
        ],
        "responses": {
          "200": { "description": "Success" },
          "400": { "description": "Error" }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/API/TimeCardApprovalSetting/Lookup/GetDisplayPeriodTypes": {
      "get": {
        "tags": [ "TimeCardApprovalSetting" ],
        "summary": "Gets Display Period Types",
        "description": "Privilege Required: ManageTimePolicies",
        "operationId": "TimeCardApprovalSetting_GetDisplayPeriodTypes",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Lookup" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/TimeCardApprovalSetting/{clientId}": {
      "get": {
        "tags": [ "TimeCardApprovalSetting" ],
        "summary": "Gets Punch Setting",
        "description": "Privilege Required: Authorized user",
        "operationId": "TimeCardApprovalSetting_GetPunchSetting",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "description": "The client the employee belongs to",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/TimeCardApprovalSetting" }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/TimeCardApprovalSetting": {
      "put": {
        "tags": [ "TimeCardApprovalSetting" ],
        "summary": "Update TimeCard Approval Setting",
        "description": "Privilege Required: ManageTimePolicies",
        "operationId": "TimeCardApprovalSetting_Put",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "setting",
            "in": "body",
            "description": "setting to be updated",
            "required": true,
            "schema": { "$ref": "#/definitions/TimeCardApprovalSetting" }
          }
        ],
        "responses": {
          "200": { "description": "Success" },
          "400": { "description": "Error" }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/TimeCardExceptions/Summary/Current": {
      "get": {
        "tags": [ "TimeCardException" ],
        "summary": "Gets the current summary of time card exceptions for all employees under the user (Dashboard)",
        "description": "Used by Dashboard - Privilege Required: TimeCardView",
        "operationId": "TimeCardException_GetCurrentSummary",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "clientId",
            "in": "query",
            "description": "The client to get the summary for",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "paygroupUid",
            "in": "query",
            "description": "The paygroup to get the summary for",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/TimeCardExceptionSummary" }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/TimeCardExceptions/Summary/Previous": {
      "get": {
        "tags": [ "TimeCardException" ],
        "summary": "Gets the previous summary of time card exceptions for all employees under the user(Dashboard)",
        "description": "Used by Dashboard - Privilege Required: TimeCardView",
        "operationId": "TimeCardException_GetPreviousSummary",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "clientId",
            "in": "query",
            "description": "The client to get the summary for",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "paygroupUid",
            "in": "query",
            "description": "The paygroup to get the summary for",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/TimeCardExceptionSummary" }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/TimeCardExceptionPolicy/{timeLinkId}": {
      "get": {
        "tags": [ "TimeCardExceptionPolicy" ],
        "summary": "Gets list of Time Card Exception policies",
        "description": "Privilege Required: ManageTimePolicies",
        "operationId": "TimeCardExceptionPolicy_GetList",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "timeLinkId",
            "in": "path",
            "description": "The client the policies belongs to",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/TimeCardExceptionPolicy" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/TimeCardExceptionPolicyById/{policyId}/{timeLinkId}": {
      "get": {
        "tags": [ "TimeCardExceptionPolicy" ],
        "summary": "Gets a single Time Card Exception policy",
        "description": "Privilege Required: ManageTimePolicies",
        "operationId": "TimeCardExceptionPolicy_GetPolicy",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "policyId",
            "in": "path",
            "description": "The unique identifier for the policy to get",
            "required": true,
            "type": "string"
          },
          {
            "name": "timeLinkId",
            "in": "path",
            "description": "The client the policy belongs to",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/TimeCardExceptionPolicy" }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/TimeCardExceptionPolicy": {
      "put": {
        "tags": [ "TimeCardExceptionPolicy" ],
        "summary": "Update Time Card Exception Policy",
        "description": "Privilege Required: ManageTimePolicies",
        "operationId": "TimeCardExceptionPolicy_Put",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "policy",
            "in": "body",
            "description": "Punch to be added",
            "required": true,
            "schema": { "$ref": "#/definitions/TimeCardExceptionPolicy" }
          }
        ],
        "responses": {
          "200": { "description": "Success" },
          "400": { "description": "Error" }
        },
        "deprecated": false,                "x-optIn": true
      },
      "post": {
        "tags": [ "TimeCardExceptionPolicy" ],
        "summary": "Add Time Card Exception Policy",
        "description": "Privilege Required: ManageTimePolicies",
        "operationId": "TimeCardExceptionPolicy_Post",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "policy",
            "in": "body",
            "description": "time card expection policy",
            "required": true,
            "schema": { "$ref": "#/definitions/TimeCardExceptionPolicy" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Object" }
          },
          "201": { "description": "Success" },
          "400": { "description": "Error" }
        },
        "deprecated": false,                "x-optIn": true
      },
      "delete": {
        "tags": [ "TimeCardExceptionPolicy" ],
        "summary": "Delete Time Card Exception Policy",
        "description": "Privilege Required: ManageTimePolicies",
        "operationId": "TimeCardExceptionPolicy_Delete",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ ],
        "parameters": [
          {
            "name": "policy",
            "in": "body",
            "description": "time card expection policy",
            "required": true,
            "schema": { "$ref": "#/definitions/TimeCardExceptionPolicy" }
          }
        ],
        "responses": { "204": { "description": "No Content" } },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/TimeCardViewOption/PrecisionOptions": {
      "get": {
        "tags": [ "TimeCardViewOption" ],
        "operationId": "TimeCardViewOption_Precision",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/KeyValuePair[Byte,Byte]" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/TimeCardViewOption/DisplayPeriodOptions": {
      "get": {
        "tags": [ "TimeCardViewOption" ],
        "summary": "Update TimeCard ViewOption. Requires: TimeCardView",
        "description": "Privilege Required: TimeCardView",
        "operationId": "TimeCardViewOption_DisplayPeriod",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Lookup" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/TimeCardViewOption": {
      "get": {
        "tags": [ "TimeCardViewOption" ],
        "summary": "Retrive Timecard view option. Requires: TimeCardView",
        "description": "Privilege Required: TimeCardView",
        "operationId": "TimeCardViewOption_Get",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/TimeCardViewOption" }
          }
        },
        "deprecated": false,                "x-optIn": true
      },
      "put": {
        "tags": [ "TimeCardViewOption" ],
        "summary": "Update TimeCard ViewOption. Requires: TimeCardView",
        "description": "Privilege Required: TimeCardView",
        "operationId": "TimeCardViewOption_Put",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "option",
            "in": "body",
            "description": "TimeCardViewOption",
            "required": true,
            "schema": { "$ref": "#/definitions/TimeCardViewOption" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Object" }
          },
          "201": { "description": "Success" },
          "400": { "description": "Error" }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/TimePolicyType": {
      "get": {
        "tags": [ "TimePolicyType" ],
        "summary": "Gets the list of policy type. Requires: Authorize",
        "description": "Required : Authorized User",
        "operationId": "TimePolicyType_Get",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/TimePolicyType" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/TimeSheet/{clientId}/{employeeUid}": {
      "get": {
        "tags": [ "TimeSheet" ],
        "summary": "Gets the time sheet for an employee for a day.",
        "description": "Privilege Required: TimeCardView",
        "operationId": "TimeSheet_Get",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "employeeUid",
            "in": "path",
            "description": "The employee to get the time sheet for",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "clientId",
            "in": "path",
            "description": "The client the employee belongs to",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "date",
            "in": "query",
            "description": "The date for the time sheet.\r\n This parameter will be used to get the time sheet that includes this date",
            "required": true,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/TimeSheet" }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/TimeSheet/Punch": {
      "put": {
        "tags": [ "TimeSheet" ],
        "summary": "Edit a punch from the time sheet",
        "description": "Privilege Required: AddEditDeactivatePunches",
        "operationId": "TimeSheet_EditPunch",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "pair",
            "in": "body",
            "description": "Pair to be edited",
            "required": true,
            "schema": { "$ref": "#/definitions/PunchPair" }
          }
        ],
        "responses": {
          "200": { "description": "Success" },
          "400": { "description": "Error" }
        },
        "deprecated": false,                "x-optIn": true
      },
      "post": {
        "tags": [ "TimeSheet" ],
        "summary": "Add a punch from the time sheet",
        "description": "Privilege Required: AddEditDeactivatePunches",
        "operationId": "TimeSheet_AddPunch",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "punch",
            "in": "body",
            "description": "Punch to be added",
            "required": true,
            "schema": { "$ref": "#/definitions/Punch" }
          }
        ],
        "responses": {
          "200": { "description": "Success" },
          "400": { "description": "Error" }
        },
        "deprecated": false,                "x-optIn": true
      },
      "delete": {
        "tags": [ "TimeSheet" ],
        "summary": "Deletes a punch",
        "description": "Privilege Required: AddEditDeactivatePunches",
        "operationId": "TimeSheet_DeletePunch",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ ],
        "parameters": [
          {
            "name": "pair",
            "in": "body",
            "description": "Punch pair with the deleted punch",
            "required": true,
            "schema": { "$ref": "#/definitions/PunchPair" }
          }
        ],
        "responses": { "204": { "description": "No Content" } },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/TimeSheet/Hour": {
      "put": {
        "tags": [ "TimeSheet" ],
        "summary": "Edit an hour. Requires: AddEditDeleteHours",
        "description": "Privilege Required: AddEditDeleteHours",
        "operationId": "TimeSheet_EditHour",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "hour",
            "in": "body",
            "description": "The hour to be Edited",
            "required": true,
            "schema": { "$ref": "#/definitions/Hour" }
          }
        ],
        "responses": {
          "200": { "description": "Success" },
          "400": { "description": "Error" }
        },
        "deprecated": false,                "x-optIn": true
      },
      "post": {
        "tags": [ "TimeSheet" ],
        "summary": "Add an hour. Requires: AddEditDeleteHours",
        "description": "Privilege Required: AddEditDeleteHours",
        "operationId": "TimeSheet_AddHour",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "hour",
            "in": "body",
            "description": "The hour to be Added",
            "required": true,
            "schema": { "$ref": "#/definitions/Hour" }
          }
        ],
        "responses": {
          "200": { "description": "Success" },
          "400": { "description": "Error" }
        },
        "deprecated": false,                "x-optIn": true
      },
      "delete": {
        "tags": [ "TimeSheet" ],
        "summary": "Deletes an hour",
        "description": "Privilege Required: AddEditDeleteHours",
        "operationId": "TimeSheet_DeleteHour",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ ],
        "parameters": [
          {
            "name": "hour",
            "in": "body",
            "description": "The hour to be deleted",
            "required": true,
            "schema": { "$ref": "#/definitions/Hour" }
          }
        ],
        "responses": {
          "204": { "description": "No Content" },
          "200": { "description": "Success" },
          "400": { "description": "Error" }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/TimeSheet/OtherPay": {
      "put": {
        "tags": [ "TimeSheet" ],
        "summary": "Edits an Other Pay record. Requires : AddEditDeleteOtherPay",
        "description": "Privilege Required: AddEditDeleteOtherPay",
        "operationId": "TimeSheet_EditOtherPay",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "otherPay",
            "in": "body",
            "description": "The Other Pay record to be edited",
            "required": true,
            "schema": { "$ref": "#/definitions/OtherPay" }
          }
        ],
        "responses": {
          "200": { "description": "Success" },
          "400": { "description": "Error" }
        },
        "deprecated": false,                "x-optIn": true
      },
      "delete": {
        "tags": [ "TimeSheet" ],
        "summary": "Deletes an Other Pay record",
        "description": "Privilege Required: AddEditDeleteOtherPay",
        "operationId": "TimeSheet_DeleteOtherPay",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ ],
        "parameters": [
          {
            "name": "otherPay",
            "in": "body",
            "description": "The Other Pay record to be deleted",
            "required": true,
            "schema": { "$ref": "#/definitions/OtherPay" }
          }
        ],
        "responses": { "204": { "description": "No Content" } },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/TimeSheet/Notes/{clientId}/{employeeUid}": {
      "put": {
        "tags": [ "TimeSheet" ],
        "summary": "Updates a day note on a time card",
        "description": "Privilege Required: EditDailyNotes",
        "operationId": "TimeSheet_UpdateNote",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "description": "The client id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "employeeUid",
            "in": "path",
            "description": "The employee uid",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "dailyNote",
            "in": "body",
            "description": "dailyNote object passed on the body",
            "required": true,
            "schema": { "$ref": "#/definitions/DailyNote" }
          }
        ],
        "responses": {
          "200": { "description": "Success" },
          "400": { "description": "Error" }
        },
        "deprecated": false,                "x-optIn": true
      },
      "post": {
        "tags": [ "TimeSheet" ],
        "summary": "Inserts a new day note on a time card.",
        "description": "Privilege Required: EditDailyNotes",
        "operationId": "TimeSheet_AddNote",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "description": "The client the employee belongs to",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "employeeUid",
            "in": "path",
            "description": "The employee uid",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "dailyNote",
            "in": "body",
            "description": "dailyNote object passed on the body",
            "required": true,
            "schema": { "$ref": "#/definitions/DailyNote" }
          }
        ],
        "responses": {
          "200": { "description": "Success" },
          "400": { "description": "Error" }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/TimeSheet/MealDeduction": {
      "put": {
        "tags": [ "TimeSheet" ],
        "summary": "Update Auto Meal Deduction",
        "description": "Privilege Required: AddEditDeleteHours",
        "operationId": "TimeSheet_MealDeduction",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "hour",
            "in": "body",
            "description": "The hour to be updated",
            "required": true,
            "schema": { "$ref": "#/definitions/Hour" }
          }
        ],
        "responses": {
          "200": { "description": "Success" },
          "400": { "description": "Error" }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/UnassignedPunches/{clientId}/{period}": {
      "get": {
        "tags": [ "UnassignedPunches" ],
        "summary": "Gets the Unassigned Punches for a client. Requires: ManageTimePolicies",
        "description": "Privilege Required: ManageTimePolicies",
        "operationId": "UnassignedPunches_Get",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "description": "The client to filter the results for",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "period",
            "in": "path",
            "description": "Period Type Id - 0 (Today) is the default",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/UnassignedPunch" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/validipaddress/{clientId}": {
      "get": {
        "tags": [ "ValidIPAddress" ],
        "summary": "Retrive Valid IP Addresses for a client. Requires: ManageTimePolicies",
        "description": "Privilege Required: ManageTimePolicies",
        "operationId": "ValidIPAddress_GetAllForClient",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "description": "The client",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/ValidIPAddress" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    },
    "/api/validipaddress/Lookup/ValidIPAddressTypes": {
      "get": {
        "tags": [ "ValidIPAddress" ],
        "summary": "Retrive Valid IP Addresses Types. Requires: ManageTimePolicies",
        "description": "Privilege Required: ManageTimePolicies",
        "operationId": "ValidIPAddress_GetValidIPAddressTypes",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Lookup" }
            }
          }
        },
        "deprecated": false,                "x-optIn": true
      }
    }
  },
  "definitions": {
    "Object": {
      "type": "object",
      "properties": { }
    },
    "EmployeeSecuritySummary": {
      "type": "object",
      "properties": {
        "UserIdentityId": { "type": "string" },
        "TimeLinkId": { "type": "string" },
        "ClientId": {
          "format": "int32",
          "type": "integer"
        },
        "EmployeeUid": {
          "format": "int64",
          "type": "integer"
        },
        "BadgeNumber": { "type": "string" },
        "EncryptedPin": { "type": "string" },
        "HasQuickPunch": { "type": "boolean" },
        "HasDetailedPunch": { "type": "boolean" }
      }
    },
    "Clock": {
      "required": [ "Name", "SerialNumber" ],
      "type": "object",
      "properties": {
        "Id": { "type": "string" },
        "Name": { "type": "string" },
        "TimeLinkId": { "type": "string" },
        "TimeLink": { "$ref": "#/definitions/TimeLink" },
        "SerialNumber": { "type": "string" },
        "ModelTypeId": {
          "format": "byte",
          "type": "string"
        },
        "TimeZoneTypeId": {
          "format": "byte",
          "type": "string"
        },
        "ConnectionTypeId": {
          "format": "byte",
          "type": "string"
        },
        "ObservesDst": { "type": "boolean" },
        "UsesDhcp": { "type": "boolean" },
        "IPAddress": { "type": "string" },
        "TipEarningCodeUid": { "type": "string" },
        "SystemTimeZoneId": {
          "type": "string",
          "readOnly": true
        },
        "PayrollUId": {
          "format": "int64",
          "type": "integer"
        },
        "IsRental": { "type": "boolean" },
        "IsActive": { "type": "boolean" }
      }
    },
    "TimeLink": {
      "type": "object",
      "properties": {
        "TimeLinkId": { "type": "string" },
        "TimeLinkTypeId": {
          "format": "byte",
          "type": "string",
          "readOnly": true
        },
        "TimeLinkValue": {
          "format": "int64",
          "type": "integer"
        },
        "TimeLinkType": {
          "format": "int32",
          "enum": [ 1, 2, 3, 4, 5 ],
          "type": "integer"
        }
      }
    },
    "Lookup": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "byte",
          "type": "string"
        },
        "Name": { "type": "string" }
      }
    },
    "ClientClock": {
      "type": "object",
      "properties": {
        "SerialNumber": { "type": "string" },
        "TimeLinkId": { "type": "string" },
       "ClientId": {
          "format": "int32",
          "type": "integer"
        },
        "Model": { "type": "string" },
        "TimeZone": { "type": "string" },
        "TipEarningCodeUid": { "type": "string" },
        "ObservesDst": { "type": "boolean" },
        "LastCommunicated": {
          "format": "date-time",
          "type": "string"
        },
        "LastAction": { "type": "string" },
        "ATTLOGStamp": {
          "format": "date-time",
          "type": "string"
        },
        "OPPERLOGStamp": {
          "format": "date-time",
          "type": "string"
        },
        "FirmwareVersion": { "type": "string" },
        "RegisteredUsers": {
          "format": "int32",
          "type": "integer"
        },
        "RegisteredFingerprints": {
          "format": "int32",
          "type": "integer"
        },
        "AttendanceRecords": {
          "format": "int32",
          "type": "integer"
        },
        "IPAddress": { "type": "string" },
        "LogEnabled": {
          "format": "int32",
          "type": "integer"
        },
        "LastCommunicatedString": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ClockGroup": {
      "required": [ "Name" ],
      "type": "object",
      "properties": {
        "Id": { "type": "string" },
        "ClientTimeLinkId": { "type": "string" },
        "Name": { "type": "string" },
        "IsActive": { "type": "boolean" },
        "ClockGroupMembers": {
          "type": "array",
          "items": { "$ref": "#/definitions/ClockGroupMember" }
        },
        "Clocks": {
          "type": "array",
          "items": { "$ref": "#/definitions/Clock" }
        },
        "Departments": {
          "type": "array",
          "items": { "$ref": "#/definitions/Department" }
        }
      }
    },
    "ClockGroupMember": {
      "type": "object",
      "properties": {
        "Id": { "type": "string" },
        "ClockGroupId": { "type": "string" },
        "ClockId": { "type": "string" },
        "DepartmentUid": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "Department": {
      "type": "object",
      "properties": {
        "Uid": {
          "format": "int64",
          "type": "integer"
        },
        "Code": {
          "format": "double",
          "type": "number"
        },
        "Description": { "type": "string" },
        "ClientId": {
          "format": "int32",
          "type": "integer"
        },
        "CodeAndDescription": { "type": "string" },
        "Level": {
          "format": "int32",
          "type": "integer"
        },
        "ParentUid": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "PunchActivityType": {
      "type": "object",
      "properties": {
        "ShowInESS": { "type": "boolean" },
        "TransferDefault": { "type": "boolean" },
        "Id": {
          "format": "byte",
          "type": "string"
        },
        "Name": { "type": "string" }
      }
    },
    "PunchStatusType": {
      "type": "object",
      "properties": {
        "TransferDefault": { "type": "boolean" },
        "Id": {
          "format": "byte",
          "type": "string"
        },
        "Name": { "type": "string" }
     }
    },
    "Employee": {
      "required": [ "EmployeeUid", "ClientId" ],
      "type": "object",
      "properties": {
        "BaseDepartment": {
          "format": "int64",
          "type": "integer"
        },
        "Name": { "$ref": "#/definitions/EmployeeName" },
        "HireDate": {
          "format": "date-time",
          "type": "string"
        },
        "PaygroupUid": {
          "format": "int64",
          "type": "integer"
        },
        "EmployeeStatus": { "type": "string" },
        "EmployeeType": { "type": "string" },
        "IsFullTime": { "type": "string" },
        "PayrollUid": {
          "format": "int64",
          "type": "integer"
        },
        "TODBadgeNumber": {
          "format": "int32",
          "type": "integer"
        },
        "EmployeeNumber": {
          "format": "double",
          "type": "number"
        },
        "BadgeNumber": { "type": "string" },
        "RateType": { "type": "string" },
        "SSN_LastFour": { "type": "string" },
        "FLSA": { "type": "string" },
        "EmployeeUid": {
          "format": "int64",
          "type": "integer"
        },
        "ClientId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "EmployeeName": {
      "required": [ "FirstName", "LastName" ],
      "type": "object",
      "properties": {
        "FirstName": {
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "LastName": {
          "maxLength": 25,
          "minLength": 0,
          "pattern": "^[a-zA-Z].*$",
          "type": "string"
        }
      }
    },
    "PunchSetting": {
      "type": "object",
      "properties": {
        "Id": { "type": "string" },
        "ClientId": {
          "format": "int32",
          "type": "integer"
        },
        "EarningCodeUid": { "type": "string" },
        "MaxConsecutiveWorkedMinutes": {
          "format": "int32",
          "type": "integer"
        },
        "PunchPairSplitTime": { "type": "string" },
        "GroupPunchPairsMinutes": {
          "format": "int32",
          "type": "integer"
        },
        "CrossingMidnightRuleTypeId": {
          "format": "byte",
          "type": "string"
        },
        "MaxConsecutiveWorkedHours": {
          "type": "string",
          "readOnly": true
        },
        "GroupPunchPairsHours": {
          "type": "string",
          "readOnly": true
        },
        "PunchPairSplitTimeString": {
          "type": "string",
          "readOnly": true
        },
        "PunchPairSplitDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "ValidIPAddressIsActive": { "type": "boolean" },
        "EssDetailPunchTimeout": {
          "format": "int32",
          "maximum": 999,
          "minimum": 30,
          "type": "integer"
        },
        "CreateBadgeAndPin": { "$ref": "#/definitions/BadgeAndPin" },
        "ValidIPAddresses": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidIPAddress" }
        }
      }
    },
    "BadgeAndPin": {
      "type": "object",
      "properties": {
        "EmployeeType": {
          "format": "int32",
          "type": "integer"
        },
        "BadgeSource": {
          "format": "int32",
          "type": "integer"
        },
        "IsDefaultPIN": { "type": "boolean" },
        "ClientId": {
          "format": "int32",
          "type": "integer"
        },
        "IsDetailPunch": { "type": "boolean" },
        "Pin": { "type": "string" }
      }
    },
    "ValidIPAddress": {
      "type": "object",
      "properties": {
        "Id": { "type": "string" },
        "TimeLinkId": { "type": "string" },
        "StartIPAddress": { "type": "string" },
        "EndIPAddress": { "type": "string" },
        "ValidIPAddressTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "ShowEndIPAddress": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "ClockCommand": {
      "type": "object",
      "properties": {
        "CommandId": { "type": "string" },
        "ClientId": {
          "format": "int32",
          "type": "integer"
        },
        "Command": { "type": "string" },
        "SerialNumber": { "type": "string" },
        "Timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "NumberOfTries": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ClockLog": {
      "type": "object",
      "properties": {
        "SerialNumber": { "type": "string" },
        "Message": { "type": "string" },
        "DateTime": {
          "format": "date-time",
          "type": "string"
        },
        "LogTypeId": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "Company": {
      "type": "object",
      "properties": {
        "ClientId": {
          "format": "int32",
          "type": "integer"
        },
        "TimeLink": { "$ref": "#/definitions/TimeLink" },
        "TimeLinkId": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Tuple[Int32,Int32,String]": {
      "type": "object",
      "properties": {
        "m_Item1": {
          "format": "int32",
          "type": "integer"
        },
        "m_Item2": {
          "format": "int32",
          "type": "integer"
        },
        "m_Item3": { "type": "string" }
      }
    },
    "DailyAudit": {
      "type": "object",
      "properties": {
        "Date": {
          "format": "date-time",
          "type": "string"
        },
        "EmployeeUid": {
          "format": "int64",
          "type": "integer"
        },
        "ClientId": {
          "format": "int32",
          "type": "integer"
        },
        "Punches": {
          "type": "array",
          "items": { "$ref": "#/definitions/AuditPunch" }
        },
        "Hours": {
          "type": "array",
          "items": { "$ref": "#/definitions/AuditHour" }
        }
      }
    },
    "AuditPunch": {
      "type": "object",
      "properties": {
        "Status": { "type": "string" },
        "DateCreated": {
          "format": "date-time",
          "type": "string"
        },
        "PunchId": { "type": "string" },
        "PunchDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "RoundedPunchDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "PunchStatus": { "type": "string" },
        "PunchActivity": { "type": "string" },
        "Department": { "type": "string" },
        "PunchSource": { "type": "string" },
        "User": { "type": "string" },
        "Note": { "type": "string" }
      }
    },
    "AuditHour": {
      "type": "object",
      "properties": {
        "Status": { "type": "string" },
        "DateCreated": {
          "format": "date-time",
          "type": "string"
        },
        "Hours": {
          "format": "double",
          "type": "number"
        },
        "Earning": { "type": "string" },
        "Department": { "type": "string" },
        "PayPolicy": { "type": "string" },
        "Deduction": {
          "format": "int32",
          "type": "integer"
        },
        "User": { "type": "string" },
        "StartDate": {
          "format": "date-time",
          "type": "string"
        },
        "EndDate": {
          "format": "date-time",
          "type": "string"
        },
        "GeneratedPolicyId": { "type": "string" },
        "DeductionAdjustedEndDateTime": {
          "format": "date-time",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DepartmentTransfer": {
      "type": "object",
      "properties": {
        "Value": { "type": "string" },
        "Name": { "type": "string" }
      }
    },
    "ClientEarningCode": {
      "type": "object",
      "properties": {
        "ClientEarningCodeUid": { "type": "string" },
        "ClientID": {
          "format": "int32",
          "type": "integer"
        },
        "ClientEarningDescription": { "type": "string" },
        "EarningCode": { "type": "string" },
        "PayCategory": { "type": "string" },
        "EffectiveDate": {
          "format": "date-time",
          "type": "string"
        },
        "EffectiveEndDate": {
          "format": "date-time",
          "type": "string"
        },
        "Hours": {
          "format": "double",
          "type": "number"
        },
        "PayCategoryType": {
          "format": "int32",
          "enum": [ 0, 1, 2 ],
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "EmployeeAvailability": {
      "type": "object",
      "properties": {
        "EmployeeAvailabilityStatusList": {
          "type": "array",
          "items": { "$ref": "#/definitions/EmployeeAvailabilityStatus" }
        },
        "CurrentDate": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "EmployeeAvailabilityStatus": {
      "type": "object",
      "properties": {
        "ClientId": {
          "format": "int32",
          "type": "integer"
        },
        "ClientTimeLinkId": { "type": "string" },
        "EmployeeUid": {
          "format": "int64",
          "type": "integer"
        },
        "EmployeeName": { "type": "string" },
        "Status": { "type": "string" },
        "LastPunchDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "DepartmentName": { "type": "string" }
      }
    },
    "EmployeeOvertimeSnapshot": {
      "type": "object",
      "properties": {
        "ClientId": {
          "format": "int32",
          "type": "integer"
        },
        "EmployeeUid": {
          "format": "int64",
          "type": "integer"
        },
        "EmployeeName": { "type": "string" },
        "DailyHours": {
          "format": "double",
          "type": "number"
        },
        "WeeklyHours": {
          "format": "double",
          "type": "number"
        },
        "ApproachingDailyOvertime": { "type": "boolean" },
        "ApproachingWeeklyOvertime": { "type": "boolean" },
        "HasExceededDailyOvertimeThreshold": { "type": "boolean" },
        "HasExceededWeeklyOvertimeThreshold": { "type": "boolean" }
      }
    },
    "EmployeeJob": {
      "type": "object",
      "properties": {
        "EmpUId": {
          "format": "int64",
          "type": "integer"
        },
        "ClientId": {
          "format": "int32",
          "type": "integer"
        },
        "Name": { "type": "string" },
        "BaseDepartmentUid": {
          "format": "int64",
          "type": "integer"
        },
        "Department": { "type": "string" },
        "EmployeeNumber": {
          "format": "int32",
          "type": "integer"
        },
        "Status": { "type": "string" },
        "StatusDescription": { "type": "string" },
        "JobTitleUid": { "type": "string" },
        "JobTitle": { "type": "string" },
        "RateType": { "type": "string" }
      }
    },
    "EmployeeExcludedPolicyGroup": {
      "type": "object",
      "properties": {
        "ClientId": {
          "format": "int32",
          "type": "integer"
        },
        "EmployeeUid": {
          "format": "int64",
          "type": "integer"
       },
        "IsExcluded": { "type": "boolean" },
        "PolicyGroupName": { "type": "string" }
      }
    },
    "EmployeePolicy": {
      "type": "object",
      "properties": {
        "Id": { "type": "string" },
        "PolicyId": { "type": "string" },
        "EmployeeUid": {
          "format": "int64",
          "type": "integer"
        },
        "ClientId": {
          "format": "int32",
          "type": "integer"
        },
        "PolicyType": {
          "format": "int32",
          "enum": [ 1, 2, 3, 4, 5 ],
          "type": "integer"
        },
        "Policy": { "$ref": "#/definitions/PayPolicy" },
        "PolicyTypeName": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "PayPolicy": {
      "required": [ "Name" ],
      "type": "object",
      "properties": {
        "PolicyType": {
          "format": "int32",
          "enum": [ 1, 2, 3, 4, 5 ],
          "type": "integer"
        },
        "PolicyTypeName": {
          "type": "string",
          "readOnly": true
        },
        "Id": { "type": "string" },
        "Name": { "type": "string" },
        "IsActive": { "type": "boolean" },
        "TimeLinkId": { "type": "string" },
        "TimeLink": { "$ref": "#/definitions/TimeLink" }
      }
    },
    "EmployeeEffectiveDatedPolicy": {
      "type": "object",
      "properties": {
        "StartDate": {
          "format": "date-time",
          "type": "string"
        },
        "EndDate": {
          "format": "date-time",
          "type": "string"
        },
        "Id": { "type": "string" },
        "PolicyId": { "type": "string" },
        "EmployeeUid": {
          "format": "int64",
          "type": "integer"
        },
        "ClientId": {
          "format": "int32",
          "type": "integer"
        },
        "PolicyType": {
          "format": "int32",
          "enum": [ 1, 2, 3, 4, 5 ],
          "type": "integer"
        },
        "Policy": { "$ref": "#/definitions/PayPolicy" },
        "PolicyTypeName": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "EmployeeSecurity": {
      "required": [ "EmployeeUid", "ClientId" ],
      "type": "object",
      "properties": {
        "Id": { "type": "string" },
        "OvertimeWeekTypeId": {
          "format": "byte",
          "type": "string"
        },
        "TimeZoneTypeId": {
          "format": "byte",
          "type": "string"
        },
        "ObservesDst": { "type": "boolean" },
        "ClockPassword": { "type": "string" },
        "ClockPrivilegeTypeId": {
          "format": "byte",
          "type": "string"
        },
        "OvertimeWeekType": {
          "format": "int32",
          "enum": [ 1, 2, 3, 4, 5, 6, 7 ],
          "type": "integer"
        },
        "OvertimeWeekTypeName": {
          "type": "string",
          "readOnly": true
        },
        "SystemTimeZoneId": {
          "type": "string",
          "readOnly": true
        },
        "EmployeeUid": {
          "format": "int64",
          "type": "integer"
        },
        "ClientId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "TimeOvertimeWeek": {
      "type": "object",
      "properties": {
        "Value": {
          "format": "byte",
          "type": "string"
        },
        "Name": { "type": "string" }
      }
    },
    "HolidayPolicy": {
      "required": [ "HolidayHourEarningCodeUid", "Name" ],
      "type": "object",
      "properties": {
        "HolidayHourEarningCodeUid": { "type": "string" },
        "WorkedHolidayEarningCodeUid": { "type": "string" },
        "AwardedHolidayMinutes": {
          "format": "int32",
          "type": "integer"
        },
        "IsGenerateHolidayHours": { "type": "boolean" },
        "IsReceivedHolidayAndWorkedHours": { "type": "boolean" },
        "IsSubtractHolidayHoursByWorkedHours": { "type": "boolean" },
        "MinimumDaysEmployed": {
          "format": "int32",
          "type": "integer"
        },
        "Holiday": { "$ref": "#/definitions/Holiday" },
        "AwardedHolidayHours": {
          "type": "string",
          "readOnly": true
        },
        "PolicyType": {
          "format": "int32",
          "enum": [ 1, 2, 3, 4, 5 ],
          "type": "integer"
        },
        "PolicyTypeName": {
          "type": "string",
          "readOnly": true
        },
        "Id": { "type": "string" },
        "Name": { "type": "string" },
        "IsActive": { "type": "boolean" },
        "TimeLinkId": { "type": "string" },
        "TimeLink": { "$ref": "#/definitions/TimeLink" }
      }
    },
    "Holiday": {
      "type": "object",
      "properties": {
        "Id": { "type": "string" },
        "HolidayPolicyId": { "type": "string" },
        "Name": { "type": "string" },
        "IsActive": { "type": "boolean" },
        "TimeLinkId": { "type": "string" },
        "TimeLink": { "$ref": "#/definitions/TimeLink" },
        "HolidayRecurrenceTypeId": {
          "format": "byte",
          "type": "string"
        },
        "StaticDate": {
          "format": "date-time",
          "type": "string"
        },
        "MonthTypeId": {
          "format": "byte",
          "type": "string"
        },
        "HolidayRecurrencePlacementTypeId": {
          "format": "byte",
          "type": "string"
        },
        "HolidayRecurrenceDayTypeId": {
          "format": "byte",
          "type": "string"
        },
        "HolidayRecurrenceDayOfMonth": {
          "format": "byte",
          "type": "string"
        },
        "IsRecurringStaticDate": {
          "type": "boolean",
          "readOnly": true
        },
        "IsRecurringDayOfMonth": {
          "type": "boolean",
          "readOnly": true
        },
        "IsExactDate": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "PayPeriodHourSummary": {
      "type": "object",
      "properties": {
        "PayPeriodHours": {
          "type": "array",
          "items": { "$ref": "#/definitions/PayPeriodEmployee" }
        },
        "StartDate": {
          "format": "date-time",
          "type": "string"
        },
        "EndDate": {
          "format": "date-time",
          "type": "string"
        },
        "ApprovalsAreEnabled": { "type": "boolean" },
        "ClientHasApprovalAll": { "type": "boolean" }
      }
    },
    "PayPeriodEmployee": {
      "type": "object",
      "properties": {
        "EmployeeUId": {
          "format": "int64",
          "type": "integer"
        },
        "EmployeeName": { "type": "string" },
        "Hours": {
          "type": "array",
          "items": { "$ref": "#/definitions/PayPeriodHour" }
        },
        "OtherPay": {
          "format": "double",
         "type": "number"
        },
        "CanBeApproved": { "type": "boolean" },
        "PunchProcessSetId": { "type": "string" },
        "ApprovalDate": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "PayPeriodHour": {
      "type": "object",
      "properties": {
        "PayCode": { "type": "string" },
        "Total": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "HoursExclusion": {
      "type": "object",
      "properties": {
        "HoursExcusionId": { "type": "string" },
        "ClientId": {
          "format": "int32",
          "type": "integer"
        },
        "HourlyNonExempt": { "type": "boolean" },
        "HourlyExempt": { "type": "boolean" },
        "SalaryNonExempt": { "type": "boolean" },
        "SalaryExempt": { "type": "boolean" },
        "EarningCode": { "$ref": "#/definitions/ClientEarningCode" }
      }
    },
    "IntervalRoundingPolicy": {
      "required": [ "Name" ],
      "type": "object",
      "properties": {
        "MethodId": {
          "format": "byte",
          "type": "string"
        },
        "PunchStatusId": {
          "format": "byte",
          "type": "string"
        },
        "MinuteId": {
          "format": "byte",
          "type": "string"
        },
        "BreakPointInMinutes": {
          "format": "byte",
          "type": "string"
        },
        "IsWork": { "type": "boolean" },
        "IsDepartmentTransfer": { "type": "boolean" },
        "IsBreak": { "type": "boolean" },
        "IsLunch": { "type": "boolean" },
        "ShowBreakPoint": {
          "type": "boolean",
          "readOnly": true
        },
        "PolicyType": {
          "format": "int32",
          "enum": [ 1, 2, 3, 4, 5 ],
          "type": "integer"
        },
        "PolicyTypeName": {
          "type": "string",
          "readOnly": true
        },
        "Id": { "type": "string" },
        "Name": { "type": "string" },
        "IsActive": { "type": "boolean" },
        "TimeLinkId": { "type": "string" },
        "TimeLink": { "$ref": "#/definitions/TimeLink" }
      }
    },
    "IntervalMinuteType": {
      "type": "object",
      "properties": {
        "Value": {
          "format": "int32",
          "type": "integer"
        },
        "Id": {
          "format": "byte",
          "type": "string"
        },
        "Name": { "type": "string" }
      }
    },
    "SecureClientTimeLink": {
      "type": "object",
      "properties": {
        "ClientId": {
          "format": "int32",
          "type": "integer"
        },
        "TimeLinkId": { "type": "string" }
      }
    },
    "MealPolicy": {
      "required": [ "Name" ],
      "type": "object",
      "properties": {
        "RequiredWorkedHoursInMinutes": {
          "format": "int32",
          "type": "integer"
        },
        "WindowStartFromFirstPunchInMinutes": {
          "format": "int32",
          "type": "integer"
        },
        "WindowEndFromFirstPunchInMinutes": {
          "format": "int32",
          "type": "integer"
        },
        "MealPeriodAmount": {
          "format": "int32",
          "type": "integer"
        },
        "IsAutoDeduct": { "type": "boolean" },
        "IsForceFullDeduction": { "type": "boolean" },
        "IsOnlyIncludeLunchTypePunches": { "type": "boolean" },
        "IsWorkedHoursBasedOnUnroundedTime": { "type": "boolean" },
        "IsMealWindowBasedOnUnroundedTime": { "type": "boolean" },
        "RequiredWorkedHoursHhmm": {
          "type": "string",
          "readOnly": true
        },
        "DurationFromFirstPunchInHhmm": {
          "type": "string",
          "readOnly": true
        },
        "DurationWindowLengthInHhmm": {
          "type": "string",
          "readOnly": true
        },
       "PolicyType": {
          "format": "int32",
          "enum": [ 1, 2, 3, 4, 5 ],
          "type": "integer"
        },
        "PolicyTypeName": {
          "type": "string",
          "readOnly": true
        },
        "Id": { "type": "string" },
        "Name": { "type": "string" },
        "IsActive": { "type": "boolean" },
        "TimeLinkId": { "type": "string" },
        "TimeLink": { "$ref": "#/definitions/TimeLink" }
      }
    },
    "OtherPay": {
      "type": "object",
      "properties": {
        "OtherPayId": { "type": "string" },
        "PunchProcessSetId": { "type": "string" },
        "Amount": {
          "format": "double",
          "type": "number"
        },
        "Date": {
          "format": "date-time",
          "type": "string"
        },
        "ClientId": {
          "format": "int32",
          "type": "integer"
        },
        "EmployeeUid": {
          "format": "int64",
          "type": "integer"
        },
        "EarningCodeUid": { "type": "string" },
        "OtherPayTypeId": {
          "format": "byte",
          "type": "string"
        },
        "CanBeProcessed": { "type": "boolean" },
        "Status": {
          "format": "int32",
          "enum": [ 0, 1, 2, 3 ],
          "type": "integer"
        },
        "IsEdited": { "type": "boolean" },
        "DisplayEarning": { "type": "string" },
        "UnassignedReason": { "type": "string" },
        "OtherPayType": {
          "format": "int32",
          "enum": [ 1, 2, 3, 4 ],
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "OvertimePolicy": {
      "required": [ "Name" ],
      "type": "object",
      "properties": {
        "EarningCodeUid": { "type": "string" },
        "ThresholdMinutes": {
          "format": "int32",
          "type": "integer"
        },
        "OvertimePolicyTypeId": {
          "format": "byte",
          "type": "string"
        },
        "DayOfWeekTypeId": {
          "format": "byte",
          "type": "string"
        },
        "NumberOfDays": {
          "format": "byte",
          "type": "string"
        },
        "DailyRequiredHoursInMinutes": {
          "format": "int32",
          "type": "integer"
        },
        "ThresholdHours": {
          "type": "string",
          "readOnly": true
        },
        "DailyRequiredHours": {
          "type": "string",
          "readOnly": true
        },
        "DayOfWeekType": {
          "format": "int32",
          "enum": [ 0, 1, 2, 3, 4, 5, 6 ],
          "type": "integer",
          "readOnly": true
        },
        "IsConsecutiveType": {
          "type": "boolean",
          "readOnly": true
        },
        "IsSpecificDayType": {
          "type": "boolean",
          "readOnly": true
        },
        "OvertimeIncludedEarnings": {
          "type": "array",
          "items": { "$ref": "#/definitions/OvertimeIncludedEarningCode" }
        },
        "OvertimeAffectedEarnings": {
          "type": "array",
          "items": { "$ref": "#/definitions/OvertimeIncludedEarningCode" },
          "readOnly": true
        },
        "PolicyType": {
          "format": "int32",
          "enum": [ 1, 2, 3, 4, 5 ],
          "type": "integer"
        },
        "PolicyTypeName": {
          "type": "string",
          "readOnly": true
        },
        "Id": { "type": "string" },
        "Name": { "type": "string" },
        "IsActive": { "type": "boolean" },
        "TimeLinkId": { "type": "string" },
        "TimeLink": { "$ref": "#/definitions/TimeLink" }
      }
    },
    "OvertimeIncludedEarningCode": {
      "type": "object",
      "properties": {
        "Id": { "type": "string" },
        "OvertimePolicyId": { "type": "string" },
        "EarningCodeUid": { "type": "string" },
        "IsThreshold": { "type": "boolean" },
        "IsAffected": { "type": "boolean" },
        "EarningCode": { "type": "string" }
      }
    },
    "PaydataHour": {
      "type": "object",
      "properties": {
        "EmployeeUid": {
          "format": "int64",
          "type": "integer"
        },
        "DepartmentUid": {
          "format": "int64",
          "type": "integer"
        },
        "EarningCodeUid": { "type": "string" },
        "Amount": {
          "format": "double",
          "type": "number"
        },
        "Hours": {
          "format": "double",
          "type": "number"
        },
        "Total": {
          "format": "double",
          "type": "number"
        },
        "Week": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Paygroup": {
      "type": "object",
      "properties": {
        "Uid": {
          "format": "int64",
          "type": "integer"
        },
        "Description": { "type": "string" },
        "ClientId": {
          "format": "int32",
          "type": "integer"
        },
        "PayrollUid": {
          "format": "int64",
          "type": "integer"
        },
        "ParentDescription": { "type": "string" },
        "CriticalErrorCount": {
          "format": "int32",
          "type": "integer"
        },
        "HasBlendedOvertime": { "type": "boolean" },
        "Frequency": { "type": "string" }
      }
    },
    "PayrollReportFilter": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int64",
          "type": "integer"
        },
        "ClientId": {
          "format": "int32",
          "type": "integer"
        },
        "Description": { "type": "string" }
      }
    },
    "PolicyGroup": {
      "required": [ "Name" ],
      "type": "object",
      "properties": {
        "Id": { "type": "string" },
        "ClientTimeLinkId": { "type": "string" },
        "TimeLinkId": { "type": "string" },
        "IsActive": { "type": "boolean" },
        "Name": { "type": "string" },
        "OvertimeWeekTypeId": {
          "format": "byte",
          "type": "string"
        },
        "TimeZoneTypeId": {
          "format": "byte",
          "type": "string"
        },
        "ObservesDst": { "type": "boolean" },
        "Policies": {
          "type": "array",
          "items": { "$ref": "#/definitions/PayPolicy" }
        },
        "Paygroups": {
          "type": "array",
          "items": { "$ref": "#/definitions/Paygroup" }
        },
        "SystemTimeZoneId": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Punch": {
      "required": [ "EmployeeUid", "PunchSourceTypeId", "PunchActivityTypeId", "PunchStatusTypeId", "IsTransfer", "ClientId" ],
      "type": "object",
      "properties": {
        "PunchId": { "type": "string" },
        "EmployeeUid": {
          "format": "int64",
          "type": "integer"
        },
        "PunchDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "Note": { "$ref": "#/definitions/Note" },
        "NoteId": { "type": "string" },
        "PunchSourceTypeId": {
          "format": "byte",
          "type": "string"
        },
        "PunchActivityTypeId": {
          "format": "byte",
          "type": "string"
        },
        "PunchStatusTypeId": {
          "format": "byte",
          "type": "string"
        },
        "DepartmentUid": {
          "format": "int64",
          "type": "integer"
        },
        "CanBeProcessed": { "type": "boolean" },
        "IsActive": { "type": "boolean" },
        "IsOverrideDisplayDate": { "type": "boolean" },
        "IsRound": { "type": "boolean" },
        "IsTransfer": { "type": "boolean" },
        "UserKey": { "type": "string" },
        "ClientId": {
          "format": "int32",
          "type": "integer"
        },
        "IsPersistedToDatabase": { "type": "boolean" },
        "PunchStatusType": { "$ref": "#/definitions/PunchStatusType" },
        "IsEdited": { "type": "boolean" },
        "PunchStatus": {
          "format": "int32",
          "enum": [ 0, 1, 2, 3 ],
          "type": "integer",
          "readOnly": true
        },
        "IPAddress": { "type": "string" },
        "Latitude": {
          "format": "double",
          "type": "number"
        },
        "Longitude": {
          "format": "double",
          "type": "number"
        },
        "ProcessedDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "EmployeeBadge": { "type": "string" },
        "EnqueuedTimeUtc": {
          "format": "date-time",
          "type": "string"
        },
        "UnassignedReason": { "type": "string" }
      }
    },
    "Note": {
      "type": "object",
      "properties": {
        "NoteId": { "type": "string" },
        "NoteTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "NoteText": { "type": "string" }
      }
    },
    "ClientReportFilter": {
      "type": "object",
      "properties": {
        "ClientId": {
          "format": "int32",
          "type": "integer"
        },
        "Description": { "type": "string" }
      }
    },
    "DepartmentReportFilter": {
      "type": "object",
      "properties": {
        "Code": {
          "format": "int64",
          "type": "integer"
        },
        "ClientIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "Descriptions": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "EmployeeReportFilter": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int64",
          "type": "integer"
        },
        "LastName": { "type": "string" },
        "FirstName": { "type": "string" },
        "PaygroupId": {
          "format": "int64",
          "type": "integer"
        },
        "BaseDepartmentId": {
          "format": "int64",
          "type": "integer"
        },
        "BaseDepartmentCode": {
          "format": "int64",
          "type": "integer"
        },
        "PayrollId": {
          "format": "int64",
          "type": "integer"
        },
        "EmployeeNumber": {
          "format": "double",
          "type": "number"
        },
        "Description": {
          "type": "string",
          "readOnly": true
        },
        "ClientId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "PaygroupReportFilter": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int64",
          "type": "integer"
        },
        "PayrollId": {
          "format": "int64",
          "type": "integer"
        },
        "Frequency": { "type": "string" },
        "ClientId": {
          "format": "int32",
          "type": "integer"
        },
        "Description": { "type": "string" }
      }
    },
    "EarningCodeReportFilter": {
      "type": "object",
      "properties": {
        "EarningCode": { "type": "string" },
        "ClientIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "Descriptions": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "Session": {
      "type": "object",
      "properties": {
        "Id": { "type": "string" },
        "ClientId": {
          "format": "int32",
          "type": "integer"
        },
        "Status": {
          "format": "int32",
          "enum": [ 0, 1, 2, 3 ],
          "type": "integer"
        },
        "Name": { "type": "string" },
        "Date": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "SessionHour": {
      "type": "object",
      "properties": {
        "SessionId": { "type": "string" },
        "ClientId": {
          "format": "int32",
          "type": "integer"
        },
        "EmployeeNumber": {
          "format": "double",
          "type": "number"
        },
        "DepartmentCode": {
          "format": "double",
          "type": "number"
        },
        "StartDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "Total": {
          "format": "double",
          "type": "number"
        },
        "EarningCode": { "type": "string" }
      }
    },
    "SessionPunch": {
      "type": "object",
      "properties": {
        "SessionId": { "type": "string" },
        "ClientId": {
          "format": "int32",
          "type": "integer"
        },
        "EmployeeNumber": {
          "format": "double",
          "type": "number"
        },
        "PunchDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "DepartmentCode": {
          "format": "double",
          "type": "number"
        },
        "Note": { "type": "string" },
        "IPAddress": { "type": "string" },
        "IsTransfer": { "type": "boolean" },
        "PunchSource": {
          "format": "int32",
          "enum": [ 1, 2, 3, 4, 5, 6 ],
          "type": "integer"
        },
        "PunchActivity": {
          "format": "int32",
          "enum": [ 1, 2, 3 ],
          "type": "integer"
        },
        "PunchStatus": {
          "format": "int32",
          "enum": [ 0, 1, 2, 3 ],
          "type": "integer"
        }
      }
    },
    "Shift": {
      "type": "object",
      "properties": {
        "Id": { "type": "string" },
        "ClientId": {
          "format": "int32",
          "type": "integer"
        },
        "Name": { "type": "string" },
        "ShiftTypeId": {
          "format": "byte",
          "type": "string"
        },
        "ColorTypeId": {
          "format": "byte",
          "type": "string"
        },
        "StartTime": { "type": "string" },
        "EndTime": { "type": "string" },
        "StartOfShiftPunchPairTimeInMinutes": {
          "format": "int32",
          "type": "integer"
        },
        "EndOfShiftPunchPairTimeInMinutes": {
          "format": "int32",
          "type": "integer"
        },
        "JobTitleUid": { "type": "string" },
        "JobTitleName": { "type": "string" },
        "DepartmentUid": {
          "format": "int64",
          "type": "integer"
        },
        "DepartmentName": { "type": "string" },
        "IsActive": { "type": "boolean" },
        "ShiftType": { "$ref": "#/definitions/Lookup" },
        "ShiftColor": { "$ref": "#/definitions/ColorType" }
      }
   },
    "ColorType": {
      "type": "object",
      "properties": {
        "ColorCode": { "type": "string" },
        "Id": {
          "format": "byte",
          "type": "string"
        },
        "Name": { "type": "string" }
      }
    },
    "Job": {
      "type": "object",
      "properties": {
        "Id": { "type": "string" },
        "Title": { "type": "string" },
        "ClientID": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "SubmitTimeSummary": {
      "type": "object",
      "properties": {
        "ClientId": {
          "format": "int32",
          "type": "integer"
        },
        "PaygroupUid": {
          "format": "int64",
          "type": "integer"
        },
        "PlannerUid": {
          "format": "int64",
          "type": "integer"
        },
        "EmployeeCount": {
          "format": "int32",
          "type": "integer"
        },
        "CanApprove": { "type": "boolean" },
        "Description": { "type": "string" },
        "CheckDate": { "type": "string" },
        "IsLockedInPayroll": { "type": "boolean" },
        "IsTimeCardApprovalPreventPayroll": { "type": "boolean" },
        "NoPayplannerExists": { "type": "boolean" },
        "TransactionCount": {
          "format": "int32",
          "type": "integer"
        },
        "OverriddenApprovals": { "type": "boolean" },
        "SessionIds": {
          "type": "array",
          "items": { "type": "string" }
        },
        "Hours": {
          "type": "array",
          "items": { "$ref": "#/definitions/CodedTotal" }
        },
        "OtherPay": {
          "type": "array",
          "items": { "$ref": "#/definitions/CodedTotal" }
        },
        "CriticalErrors": {
          "type": "array",
          "items": { "$ref": "#/definitions/EmployeeCriticalErrorSummary" }
        },
        "UnapprovedTimeCards": {
          "type": "array",
          "items": { "$ref": "#/definitions/UnapprovedTimeCard" }
        },
        "DataErrors": {
          "type": "array",
          "items": { "$ref": "#/definitions/SubmitTimeDataError" }
        },
        "Submission": { "$ref": "#/definitions/PayImportSession" }
      }
    },
    "CodedTotal": {
      "type": "object",
      "properties": {
        "Uid": { "type": "string" },
        "Code": { "type": "string" },
        "Total": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "EmployeeCriticalErrorSummary": {
      "type": "object",
      "properties": {
        "EmployeeUid": {
          "format": "int64",
          "type": "integer"
        },
        "PeriodDate": {
          "format": "date-time",
          "type": "string"
        },
        "ClientId": {
          "format": "int32",
          "type": "integer"
        },
        "EmployeeName": { "$ref": "#/definitions/EmployeeName" },
        "CriticalErrorCount": {
          "format": "int32",
          "type": "integer"
        },
        "HomeDepartment": { "type": "string" },
        "SupervisorName": { "$ref": "#/definitions/EmployeeName" }
      }
    },
    "UnapprovedTimeCard": {
      "type": "object",
      "properties": {
        "EmployeeUid": {
          "format": "int64",
          "type": "integer"
        },
        "PeriodDate": {
          "format": "date-time",
          "type": "string"
        },
        "ClientId": {
          "format": "int32",
          "type": "integer"
        },
        "PunchProcessSetId": { "type": "string" },
        "EmployeeName": { "$ref": "#/definitions/EmployeeName" },
        "HomeDepartment": { "type": "string" },
        "SupervisorName": { "$ref": "#/definitions/EmployeeName" },
        "TimeCardApprovalId": { "type": "string" }
      }
    },
    "SubmitTimeDataError": {
      "type": "object",
      "properties": {
        "EmployeeName": { "$ref": "#/definitions/EmployeeName" },
        "ErrorText": { "type": "string" }
      }
    },
    "PayImportSession": {
      "type": "object",
      "properties": {
        "Id": { "type": "string" },
        "Status": {
          "format": "int32",
          "enum": [ 0, 1, 2, 3 ],
          "type": "integer"
        },
        "ClientId": {
          "format": "int32",
          "type": "integer"
        },
        "Paygroup": { "type": "string" },
        "PayWeek": {
          "format": "byte",
          "type": "string"
        },
        "Name": { "type": "string" },
        "PeriodEndDate": {
          "format": "date-time",
          "type": "string"
        },
        "UserKey": { "type": "string" },
        "UserName": { "type": "string" },
        "DateCreated": {
          "format": "date-time",
          "type": "string"
        },
        "TransactionCount": {
          "format": "int32",
          "type": "integer"
        }
     }
    },
    "PayImportSessionTransactionLog": {
      "type": "object",
      "properties": {
        "Id": { "type": "string" },
        "PayImportSessionTrackerId": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "EmployeeName": { "type": "string" },
        "ErrorContent": { "type": "string" }
      }
    },
    "EnvironmentValidation": {
      "type": "object",
      "properties": {
        "Result": {
          "format": "int32",
          "enum": [ 0, 1, 2 ],
          "type": "integer"
        },
        "Name": { "type": "string" },
        "CurrentSetting": { "type": "string" },
        "AdditionalInformation": { "type": "string" }
      }
    },
    "CloudLog": {
      "type": "object",
      "properties": {
        "Category": { "type": "string" },
        "Message": { "type": "string" },
        "Timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "ClientId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "TimeCard": {
      "type": "object",
      "properties": {
        "TimeCardId": { "type": "string" },
        "EmployeeUid": {
          "format": "int64",
          "type": "integer"
        },
        "ClientId": {
          "format": "int32",
          "type": "integer"
        },
        "StartDate": {
          "format": "date-time",
          "type": "string"
        },
        "EndDate": {
          "format": "date-time",
          "type": "string"
        },
        "TimeCardDays": {
          "type": "array",
          "items": { "$ref": "#/definitions/TimeCardDay" }
        },
        "Totals": {
          "type": "array",
          "items": { "$ref": "#/definitions/TimeCardTotal" }
        },
        "UserKey": { "type": "string" },
        "ViewOptions": { "$ref": "#/definitions/TimeCardViewOption" },
        "ProcessSetIds": {
          "type": "array",
          "items": { "type": "string" }
        },
        "HoursTotal": {
          "format": "double",
          "type": "number"
        },
        "ShowDeductions": { "type": "boolean" },
        "Approvals": {
          "type": "array",
          "items": { "$ref": "#/definitions/TimeCardApproval" }
        },
        "HasCriticalExceptions": { "type": "boolean" },
        "CurrentUserHasApprovedTimeCard": { "type": "boolean" },
        "TimeCardIsLockedFromPayroll": { "type": "boolean" },
        "DoesPayplannerExist": { "type": "boolean" },
        "NeedsRecalculate": { "type": "boolean" },
        "HasOverlappingPayruns": { "type": "boolean" },
        "HoursTotalString": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "TimeCardDay": {
      "type": "object",
      "properties": {
        "DisplayDate": { "type": "string" },
        "PunchPairList": {
          "type": "array",
          "items": { "$ref": "#/definitions/PunchPair" }
        },
        "HourList": {
          "type": "array",
          "items": { "$ref": "#/definitions/Hour" }
        },
        "OtherPayList": {
          "type": "array",
          "items": { "$ref": "#/definitions/OtherPay" }
        },
        "ExceptionList": {
          "type": "array",
          "items": { "$ref": "#/definitions/TimeCardExceptionOccurrence" }
        },
        "Note": { "$ref": "#/definitions/DailyNote" },
        "DailyTotals": { "$ref": "#/definitions/TimeCardDayTotals" },
        "HasNotes": { "type": "boolean" },
        "HasCriticalExceptions": { "type": "boolean" },
        "DateTimeValue": {
          "format": "date-time",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "TimeCardTotal": {
      "type": "object",
      "properties": {
        "DepartmentUid": {
          "format": "int64",
          "type": "integer"
        },
        "EarningsCode": { "type": "string" },
        "HoursTotal": {
          "format": "double",
          "type": "number"
        },
        "HoursTotalString": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "TimeCardViewOption": {
      "type": "object",
      "properties": {
        "TimeCardViewOptionId": { "type": "string" },
        "UserId": { "type": "string" },
        "Show24HourFormat": { "type": "boolean" },
        "ShowHourMinuteFormat": { "type": "boolean" },
        "NumberOfDecimalPlaces": {
          "format": "byte",
          "maximum": 4,
          "minimum": 2,
          "type": "string"
        },
        "DisplayPeriod": { "$ref": "#/definitions/Lookup" }
      }
    },
    "TimeCardApproval": {
      "type": "object",
      "properties": {
        "Id": { "type": "string" },
        "UserKey": { "type": "string" },
        "UserId": { "type": "string" },
        "UserName": { "type": "string" },
        "DateApproved": {
          "format": "date-time",
          "type": "string"
        },
        "DateApprovedString": {
          "type": "string",
          "readOnly": true
        },
        "PunchProcessSetId": { "type": "string" },
        "ClientId": {
          "format": "int32",
          "type": "integer"
        },
        "EmployeeUid": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "PunchPair": {
      "type": "object",
      "properties": {
        "PunchPairId": { "type": "string" },
        "ClientId": {
          "format": "int32",
          "type": "integer"
        },
        "PunchProcessSetId": { "type": "string" },
        "EmployeeUid": {
          "format": "int64",
          "type": "integer"
        },
        "DepartmentUid": {
          "format": "int64",
          "type": "integer"
        },
        "InPunchId": { "type": "string" },
        "OutPunchId": { "type": "string" },
        "InPunch": { "$ref": "#/definitions/Punch" },
        "OutPunch": { "$ref": "#/definitions/Punch" },
        "DisplayDate": {
          "format": "date-time",
          "type": "string"
        },
        "CanBeProcessed": { "type": "boolean" },
        "Latitude": { "type": "string" },
        "Longitude": { "type": "string" },
        "RequestedIPAddress": { "type": "string" },
        "InPunchDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "OutPunchDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "InOriginalPunchDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "OutOriginalPunchDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "InStatus": {
          "format": "int32",
          "enum": [ 0, 1, 2, 3 ],
          "type": "integer"
        },
        "OutStatus": {
          "format": "int32",
          "enum": [ 0, 1, 2, 3 ],
          "type": "integer"
        },
        "Hours": {
          "type": "array",
          "items": { "$ref": "#/definitions/Hour" }
        },
        "IsComplete": {
          "type": "boolean",
          "readOnly": true
        },
        "InPunchNoteId": { "type": "string" },
        "InPunchNote": { "type": "string" },
        "OutPunchNoteId": { "type": "string" },
        "OutPunchNote": { "type": "string" },
        "MemoryPunchPairId": { "type": "string" },
        "InPunchIsEdited": { "type": "boolean" },
        "OutPunchIsEdited": { "type": "boolean" },
        "CanBeEdited": { "type": "boolean" },
        "InPunchIsDepartmentTransfer": { "type": "boolean" },
        "OutPunchIsDepartmentTransfer": { "type": "boolean" },
        "InPunchDepartmentUid": {
          "format": "int64",
          "type": "integer"
        },
        "OutPunchDepartmentUid": {
          "format": "int64",
          "type": "integer"
        },
        "InPunchActivityTypeId": {
          "format": "byte",
          "type": "string"
        },
        "OutPunchActivityTypeId": {
          "format": "byte",
          "type": "string"
        },
        "InPunchStatusTypeId": {
          "format": "byte",
          "type": "string"
        },
        "OutPunchStatusTypeId": {
          "format": "byte",
          "type": "string"
        },
        "InHour": { "type": "string" },
        "InMinute": { "type": "string" },
        "InPeriod": { "type": "string" },
        "OutHour": { "type": "string" },
        "OutMinute": { "type": "string" },
        "OutPeriod": { "type": "string" },
        "DisplayInRoundedPunchDateTime": { "type": "string" },
        "DisplayOutRoundedPunchDateTime": { "type": "string" },
        "DisplayDepartment": { "type": "string" },
        "IsOutPunchGenerated": {
          "type": "boolean",
          "readOnly": true
        },
        "IsInPunchGenerated": {
          "type": "boolean",
          "readOnly": true
        },
        "InPunchDisplaySymbol": {
          "type": "string",
          "readOnly": true
        },
        "OutPunchDisplaySymbol": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Hour": {
      "type": "object",
      "properties": {
        "HourId": { "type": "string" },
        "ClientId": {
          "format": "int32",
          "type": "integer"
        },
        "EmployeeUid": {
          "format": "int64",
          "type": "integer"
        },
        "PunchProcessSetId": { "type": "string" },
        "EarningCodeUid": { "type": "string" },
        "PunchPairId": { "type": "string" },
        "DepartmentUid": {
          "format": "int64",
          "type": "integer"
        },
        "NoteId": { "type": "string" },
        "StartDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "EndDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "DisplayDate": {
          "format": "date-time",
          "type": "string"
        },
        "CanBeProcessed": { "type": "boolean" },
        "IsEdited": { "type": "boolean" },
        "IsSystemGenerated": {
          "type": "boolean",
          "readOnly": true
        },
        "GeneratingPolicyId": { "type": "string" },
        "Status": {
          "format": "int32",
          "enum": [ 0, 1, 2, 3 ],
          "type": "integer"
        },
        "MemoryPunchPairId": { "type": "string" },
        "MemoryUid": { "type": "string" },
        "UserKey": { "type": "string" },
        "DisplayHhMm": { "type": "boolean" },
        "DisplayDepartment": { "type": "string" },
        "DisplayEarning": { "type": "string" },
        "DeductionAdjustedEndDateTime": {
          "format": "date-time",
          "type": "string",
          "readOnly": true
        },
        "Deduction": {
          "format": "int32",
          "type": "integer"
        },
        "DeductionString": {
          "type": "string",
          "readOnly": true
        },
        "Total": {
          "format": "double",
          "type": "number"
        },
        "TotalString": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "TimeCardExceptionOccurrence": {
      "type": "object",
      "properties": {
        "Id": { "type": "string" },
        "EmployeeUid": {
          "format": "int64",
          "type": "integer"
        },
        "PunchProcessSetId": { "type": "string" },
        "TimeCardExceptionId": { "type": "string" },
        "Date": {
          "format": "date-time",
          "type": "string"
        },
        "PunchId": { "type": "string" },
        "Exception": { "type": "string" },
        "IsCritical": { "type": "boolean" }
      }
    },
    "DailyNote": {
      "type": "object",
      "properties": {
        "DailyNoteId": { "type": "string" },
        "Note": { "type": "string" },
        "Date": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "TimeCardDayTotals": {
      "type": "object",
      "properties": {
        "OtherPayTotal": {
          "format": "double",
          "type": "number"
        },
        "TotalHours": {
          "format": "double",
          "type": "number"
        },
        "EarningCodeHoursDisplay": { "type": "string" },
        "DisplayHhMm": { "type": "boolean" },
        "EarningDailyTotals": {
          "type": "array",
          "items": { "$ref": "#/definitions/EarningDailyTotal" }
        },
        "TotalHoursString": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "EarningDailyTotal": {
      "type": "object",
      "properties": {
        "EarningCode": { "type": "string" },
        "EarningDate": {
          "format": "date-time",
          "type": "string"
        },
        "HoursTotal": {
          "format": "double",
          "type": "number"
        },
        "PayCategorySort": {
          "format": "int32",
          "type": "integer"
        },
        "ShowHhMmFormat": { "type": "boolean" },
        "NumberOfDecimals": {
          "format": "int32",
         "type": "integer"
        },
        "HoursTotalString": {
          "type": "string",
          "readOnly": true
        },
        "EarningHoursString": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "TimeCardDayNotes": {
      "type": "object",
      "properties": {
        "Date": {
          "format": "date-time",
          "type": "string"
        },
        "PunchNoteList": {
          "type": "array",
          "items": { "$ref": "#/definitions/PunchNote" }
        },
        "DailyNote": { "$ref": "#/definitions/DailyNote" }
      }
    },
    "PunchNote": {
      "type": "object",
      "properties": {
        "NoteId": { "type": "string" },
        "PunchStatus": { "type": "string" },
        "PunchTime": {
          "format": "date-time",
          "type": "string"
        },
        "Note": { "type": "string" }
      }
    },
    "TimeCardApprovalBase": {
      "type": "object",
      "properties": {
        "PunchProcessSetId": { "type": "string" },
        "ClientId": {
          "format": "int32",
          "type": "integer"
        },
        "EmployeeUid": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "TimeCardApprovalSetting": {
      "type": "object",
      "properties": {
        "Id": { "type": "string" },
        "ClientId": {
          "format": "int32",
          "type": "integer"
        },
        "DisplayPeriodTypeId": {
          "format": "byte",
          "type": "string"
        },
        "IsEmployeeApproval": { "type": "boolean" },
        "IsSupervisorApproval": { "type": "boolean" },
        "IsDirectorApproval": { "type": "boolean" },
        "IsPreventPayroll": { "type": "boolean" },
        "IsEnableApproveAll": { "type": "boolean" },
        "CheckboxVerbiage": { "type": "string" },
        "TimeCardApprovalDisplayPeriodType": {
          "format": "int32",
          "enum": [ 1, 2 ],
          "type": "integer"
        }
      }
    },
    "TimeCardExceptionSummary": {
      "type": "object",
      "properties": {
        "Date": {
          "format": "date-time",
          "type": "string"
        },
        "StartDate": {
          "format": "date-time",
          "type": "string"
        },
        "EndDate": {
          "format": "date-time",
          "type": "string"
        },
        "EmployeeExceptionSummaries": {
          "type": "array",
          "items": { "$ref": "#/definitions/EmployeeTimeCardExceptionSummary" }
        }
      }
    },
    "EmployeeTimeCardExceptionSummary": {
      "type": "object",
      "properties": {
        "ClientId": {
          "format": "int32",
          "type": "integer"
        },
        "EmployeeUid": {
          "format": "int64",
          "type": "integer"
        },
        "Name": { "$ref": "#/definitions/EmployeeName" },
        "CriticalExceptions": {
          "format": "int32",
          "type": "integer"
        },
        "NonCriticalExceptions": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "TimeCardExceptionPolicy": {
      "required": [ "Name" ],
      "type": "object",
      "properties": {
        "Exceptions": {
          "type": "array",
          "items": { "$ref": "#/definitions/TimeCardException" }
        },
        "PolicyType": {
          "format": "int32",
          "enum": [ 1, 2, 3, 4, 5 ],
          "type": "integer"
        },
        "PolicyTypeName": {
          "type": "string",
          "readOnly": true
        },
        "Id": { "type": "string" },
        "Name": { "type": "string" },
        "IsActive": { "type": "boolean" },
        "TimeLinkId": { "type": "string" },
        "TimeLink": { "$ref": "#/definitions/TimeLink" }
      }
    },
    "TimeCardException": {
      "type": "object",
      "properties": {
        "Id": { "type": "string" },
        "TimeLinkId": { "type": "string" },
        "TimeCardExceptionPolicyId": { "type": "string" },
        "Name": { "type": "string" },
        "IsActive": { "type": "boolean" },
        "HasGracePeriod": { "type": "boolean" },
        "GracePeriodInMinutes": {
          "format": "int32",
          "type": "integer"
        },
        "IsCritical": { "type": "boolean" },
        "DisplayOrder": {
         "format": "byte",
          "type": "string"
        }
      }
    },
    "KeyValuePair[Byte,Byte]": {
      "type": "object",
      "properties": {
        "key": {
          "format": "byte",
          "type": "string"
        },
        "value": {
          "format": "byte",
          "type": "string"
        }
      }
    },
    "TimePolicyType": {
      "type": "object",
      "properties": {
        "Value": { "type": "string" },
        "Name": { "type": "string" },
        "ShortName": { "type": "string" }
      }
    },
    "TimeSheet": {
      "type": "object",
      "properties": {
        "TimeCardId": { "type": "string" },
        "EmployeeUid": {
          "format": "int64",
          "type": "integer"
        },
        "ClientId": {
          "format": "int32",
          "type": "integer"
        },
        "StartDate": {
          "format": "date-time",
          "type": "string"
        },
        "EndDate": {
          "format": "date-time",
          "type": "string"
        },
        "UserKey": { "type": "string" },
        "HasCriticalExceptions": { "type": "boolean" },
        "CurrentUserHasApprovedTimeCard": { "type": "boolean" },
        "TimeCardIsLockedFromPayroll": { "type": "boolean" },
        "DoesPayplannerExist": { "type": "boolean" },
        "NeedsRecalculate": { "type": "boolean" },
        "HasOverlappingPayruns": { "type": "boolean" },
        "ViewOptions": { "$ref": "#/definitions/TimeCardViewOption" },
        "ProcessSetIds": {
          "type": "array",
          "items": { "type": "string" }
        },
        "Approvals": {
          "type": "array",
          "items": { "$ref": "#/definitions/TimeCardApproval" }
        },
        "TimeCardDays": {
          "type": "array",
          "items": { "$ref": "#/definitions/TimeCardDay" }
        },
        "Summary": { "$ref": "#/definitions/TimeSheetSummary" }
      }
    },
    "TimeSheetSummary": {
      "type": "object",
      "properties": {
        "Departments": {
          "type": "array",
          "items": { "$ref": "#/definitions/SummaryDepartment" }
        },
        "EarningTotals": {
          "type": "array",
          "items": { "$ref": "#/definitions/EarningTotal" }
        },
        "HourTotal": {
          "format": "double",
          "type": "number"
        },
        "HourTotalString": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SummaryDepartment": {
      "type": "object",
      "properties": {
        "DepartmentUid": {
          "format": "int64",
          "type": "integer"
        },
        "CodeDescription": { "type": "string" },
        "HoursTotal": {
          "format": "double",
          "type": "number"
        },
        "EarningTotals": {
          "type": "array",
          "items": { "$ref": "#/definitions/EarningTotal" }
        },
        "HoursTotalString": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "EarningTotal": {
      "type": "object",
      "properties": {
        "EarningCode": { "type": "string" },
        "HoursTotal": {
          "format": "double",
          "type": "number"
        },
        "PayCategorySort": {
          "format": "int32",
          "type": "integer"
        },
        "HoursTotalString": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "UnassignedPunch": {
      "type": "object",
      "properties": {
        "Id": { "type": "string" },
        "Badge": { "type": "string" },
        "ClientId": {
          "format": "int32",
          "type": "integer"
        },
        "EmployeeUid": {
          "format": "int64",
          "type": "integer"
        },
        "PunchDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "PunchSource": { "type": "string" },
        "PunchActivity": { "type": "string" },
        "PunchStatus": { "type": "string" },
        "HomeDepartment": { "type": "string" },
        "EmployeeName": { "type": "string" },
        "Note": { "type": "string" },
        "Reason": { "type": "string" }
      }
    }
  }

}

    
 

