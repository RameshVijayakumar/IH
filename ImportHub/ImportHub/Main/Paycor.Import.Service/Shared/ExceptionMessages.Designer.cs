//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Paycor.Import.Service.Shared {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class ExceptionMessages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ExceptionMessages() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Paycor.Import.Service.Shared.ExceptionMessages", typeof(ExceptionMessages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Compatible mapping was found for uploaded file: {0} at endpoint: {1}.
        /// </summary>
        public static string CompatibleMappingFound {
            get {
                return ResourceManager.GetString("CompatibleMappingFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to First line in the file is empty/blank. Remove empty first line from file and try import again.
        /// </summary>
        public static string EEImportEmptyFirstLine {
            get {
                return ResourceManager.GetString("EEImportEmptyFirstLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while tring to upload an import file..
        /// </summary>
        public static string ErrorOnFileUpload {
            get {
                return ResourceManager.GetString("ErrorOnFileUpload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Lookup Key for failed csv file.
        /// </summary>
        public static string FailedCsvInvalidLookup {
            get {
                return ResourceManager.GetString("FailedCsvInvalidLookup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No File found in the Blob for the given ID.
        /// </summary>
        public static string FailedCsvNoFileFoundInBlob {
            get {
                return ResourceManager.GetString("FailedCsvNoFileFoundInBlob", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to download the failed rows csv report.
        /// </summary>
        public static string FailedCsvNotFound {
            get {
                return ResourceManager.GetString("FailedCsvNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uploaded {0} has no clientid field.
        /// </summary>
        public static string FileUploadCsvNoClientIdField {
            get {
                return ResourceManager.GetString("FileUploadCsvNoClientIdField", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uploaded {0} has no data.
        /// </summary>
        public static string FileUploadCsvNoData {
            get {
                return ResourceManager.GetString("FileUploadCsvNoData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uploaded {0} has no header.
        /// </summary>
        public static string FileUploadCsvNoHeader {
            get {
                return ResourceManager.GetString("FileUploadCsvNoHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uploaded {0} has only header and no data.
        /// </summary>
        public static string FileUploadCsvOnlyHeaderNoData {
            get {
                return ResourceManager.GetString("FileUploadCsvOnlyHeaderNoData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not write to data store. Please try again later..
        /// </summary>
        public static string FileUploadIntegrationException {
            get {
                return ResourceManager.GetString("FileUploadIntegrationException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unhandled exception occurred. Please try again later..
        /// </summary>
        public static string FileUploadInternalServerException {
            get {
                return ResourceManager.GetString("FileUploadInternalServerException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid upload file..
        /// </summary>
        public static string FileUploadInvalidFile {
            get {
                return ResourceManager.GetString("FileUploadInvalidFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ClientId missing in uploaded file..
        /// </summary>
        public static string FileUploadMissingClientId {
            get {
                return ResourceManager.GetString("FileUploadMissingClientId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must include at least one file to upload..
        /// </summary>
        public static string FileUploadNoFilesUploaded {
            get {
                return ResourceManager.GetString("FileUploadNoFilesUploaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uploaded file is not a tab delimited file..
        /// </summary>
        public static string FileUploadNotTabDelimited {
            get {
                return ResourceManager.GetString("FileUploadNotTabDelimited", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parsed ClientId = {0} from upload file..
        /// </summary>
        public static string FileUploadParsedClientId {
            get {
                return ResourceManager.GetString("FileUploadParsedClientId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File uploaded as {0} to {1} and message is put on {2}..
        /// </summary>
        public static string FileUploadSuccessMessage {
            get {
                return ResourceManager.GetString("FileUploadSuccessMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uploaded file is not in a recognized format..
        /// </summary>
        public static string FileUploadUnRecognizedFormat {
            get {
                return ResourceManager.GetString("FileUploadUnRecognizedFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The expected client ID is either missing or invalid..
        /// </summary>
        public static string InvalidClientId {
            get {
                return ResourceManager.GetString("InvalidClientId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The expected data is missing..
        /// </summary>
        public static string MissingData {
            get {
                return ResourceManager.GetString("MissingData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The server requires a file type information block to be uploaded with the file..
        /// </summary>
        public static string MissingInfoBlock {
            get {
                return ResourceManager.GetString("MissingInfoBlock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No compatible mapping was found for uploaded file: {0}.
        /// </summary>
        public static string NoCompatibleMappingFound {
            get {
                return ResourceManager.GetString("NoCompatibleMappingFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No mapping was supplied for the uploaded import file..
        /// </summary>
        public static string NoMappingFound {
            get {
                return ResourceManager.GetString("NoMappingFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Recognized formats: TXT and CSV..
        /// </summary>
        public static string RecognizedFormats {
            get {
                return ResourceManager.GetString("RecognizedFormats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find status message with id: {0}.
        /// </summary>
        public static string StatusMessageNotFound {
            get {
                return ResourceManager.GetString("StatusMessageNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User unauthorized to consume this service..
        /// </summary>
        public static string UnauthorizedAccess {
            get {
                return ResourceManager.GetString("UnauthorizedAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User unauthenticated..
        /// </summary>
        public static string UserUnauthenticated {
            get {
                return ResourceManager.GetString("UserUnauthenticated", resourceCulture);
            }
        }
    }
}
